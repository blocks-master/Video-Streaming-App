{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/inheritsLoose\";\nimport _mapValues from \"lodash/mapValues\";\nimport _isEqual from \"lodash/isEqual\";\nimport _isEmpty from \"lodash/isEmpty\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport prefixName from './util/prefixName';\nimport { withReduxForm } from './ReduxFormContext';\nexport default function createValues(_ref) {\n  var getIn = _ref.getIn;\n  return function (firstArg) {\n    for (var _len = arguments.length, rest = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      rest[_key - 1] = arguments[_key];\n    } // create a class that reads current form name and creates a selector\n    // return\n\n\n    return function (Component) {\n      var FormValues = /*#__PURE__*/function (_React$Component) {\n        _inheritsLoose(FormValues, _React$Component);\n\n        function FormValues(props) {\n          var _this;\n\n          _this = _React$Component.call(this, props) || this;\n\n          if (!props._reduxForm) {\n            throw new Error('formValues() must be used inside a React tree decorated with reduxForm()');\n          }\n\n          _this.updateComponent(props);\n\n          return _this;\n        }\n\n        var _proto = FormValues.prototype;\n\n        _proto.UNSAFE_componentWillReceiveProps = function UNSAFE_componentWillReceiveProps(props) {\n          if (typeof firstArg === 'function') {\n            this.updateComponent(props);\n          }\n        };\n\n        _proto.render = function render() {\n          var Component = this.Component;\n          return React.createElement(Component // so that the connected component updates props when sectionPrefix has changed\n          , _extends({\n            sectionPrefix: this.props._reduxForm.sectionPrefix\n          }, this.props));\n        };\n\n        _proto.updateComponent = function updateComponent(props) {\n          var valuesMap;\n          var resolvedFirstArg = typeof firstArg === 'function' ? firstArg(props) : firstArg;\n\n          if (typeof resolvedFirstArg === 'string') {\n            var _rest$reduce;\n\n            valuesMap = rest.reduce(function (result, k) {\n              result[k] = k;\n              return result;\n            }, (_rest$reduce = {}, _rest$reduce[resolvedFirstArg] = resolvedFirstArg, _rest$reduce));\n          } else {\n            valuesMap = resolvedFirstArg;\n          }\n\n          if (_isEmpty(valuesMap)) {\n            // maybe that empty valuesMap is ok if firstArg is a function?\n            // if this is the case, we probably should set this.Component = Component\n            throw new Error('formValues(): You must specify values to get as formValues(name1, name2, ...) or formValues({propName1: propPath1, ...}) or formValues((props) => name) or formValues((props) => ({propName1: propPath1, ...}))');\n          }\n\n          if (_isEqual(valuesMap, this._valuesMap)) {\n            // no change in valuesMap\n            return;\n          }\n\n          this._valuesMap = valuesMap;\n          this.setComponent();\n        };\n\n        _proto.setComponent = function setComponent() {\n          var _this2 = this;\n\n          var formValuesSelector = function formValuesSelector(_, _ref2) {\n            var sectionPrefix = _ref2.sectionPrefix; // Yes, we're only using connect() for listening to updates.\n            // The second argument needs to be there so that connect calls\n            // the selector when props change\n\n            var getValues = _this2.props._reduxForm.getValues;\n            var values = getValues();\n            return _mapValues(_this2._valuesMap, function (path) {\n              return getIn(values, prefixName(_this2.props, path));\n            });\n          };\n\n          this.Component = connect(formValuesSelector, function () {\n            return {};\n          } // ignore dispatch\n          )(function (_ref3) {\n            var sectionPrefix = _ref3.sectionPrefix,\n                otherProps = _objectWithoutPropertiesLoose(_ref3, [\"sectionPrefix\"]);\n\n            return React.createElement(Component, otherProps);\n          });\n        };\n\n        return FormValues;\n      }(React.Component);\n\n      return withReduxForm(FormValues);\n    };\n  };\n}","map":{"version":3,"sources":["C:/Users/gethi/Desktop/React Apps/streams/client/node_modules/redux-form/es/createFormValues.js"],"names":["_objectWithoutPropertiesLoose","_extends","_inheritsLoose","_mapValues","_isEqual","_isEmpty","React","connect","prefixName","withReduxForm","createValues","_ref","getIn","firstArg","_len","arguments","length","rest","Array","_key","Component","FormValues","_React$Component","props","_this","call","_reduxForm","Error","updateComponent","_proto","prototype","UNSAFE_componentWillReceiveProps","render","createElement","sectionPrefix","valuesMap","resolvedFirstArg","_rest$reduce","reduce","result","k","_valuesMap","setComponent","_this2","formValuesSelector","_","_ref2","getValues","values","path","_ref3","otherProps"],"mappings":"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","sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/inheritsLoose\";\nimport _mapValues from \"lodash/mapValues\";\nimport _isEqual from \"lodash/isEqual\";\nimport _isEmpty from \"lodash/isEmpty\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport prefixName from './util/prefixName';\nimport { withReduxForm } from './ReduxFormContext';\nexport default function createValues(_ref) {\n  var getIn = _ref.getIn;\n  return function (firstArg) {\n    for (var _len = arguments.length, rest = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      rest[_key - 1] = arguments[_key];\n    }\n\n    // create a class that reads current form name and creates a selector\n    // return\n    return function (Component) {\n      var FormValues =\n      /*#__PURE__*/\n      function (_React$Component) {\n        _inheritsLoose(FormValues, _React$Component);\n\n        function FormValues(props) {\n          var _this;\n\n          _this = _React$Component.call(this, props) || this;\n\n          if (!props._reduxForm) {\n            throw new Error('formValues() must be used inside a React tree decorated with reduxForm()');\n          }\n\n          _this.updateComponent(props);\n\n          return _this;\n        }\n\n        var _proto = FormValues.prototype;\n\n        _proto.UNSAFE_componentWillReceiveProps = function UNSAFE_componentWillReceiveProps(props) {\n          if (typeof firstArg === 'function') {\n            this.updateComponent(props);\n          }\n        };\n\n        _proto.render = function render() {\n          var Component = this.Component;\n          return React.createElement(Component // so that the connected component updates props when sectionPrefix has changed\n          , _extends({\n            sectionPrefix: this.props._reduxForm.sectionPrefix\n          }, this.props));\n        };\n\n        _proto.updateComponent = function updateComponent(props) {\n          var valuesMap;\n          var resolvedFirstArg = typeof firstArg === 'function' ? firstArg(props) : firstArg;\n\n          if (typeof resolvedFirstArg === 'string') {\n            var _rest$reduce;\n\n            valuesMap = rest.reduce(function (result, k) {\n              result[k] = k;\n              return result;\n            }, (_rest$reduce = {}, _rest$reduce[resolvedFirstArg] = resolvedFirstArg, _rest$reduce));\n          } else {\n            valuesMap = resolvedFirstArg;\n          }\n\n          if (_isEmpty(valuesMap)) {\n            // maybe that empty valuesMap is ok if firstArg is a function?\n            // if this is the case, we probably should set this.Component = Component\n            throw new Error('formValues(): You must specify values to get as formValues(name1, name2, ...) or formValues({propName1: propPath1, ...}) or formValues((props) => name) or formValues((props) => ({propName1: propPath1, ...}))');\n          }\n\n          if (_isEqual(valuesMap, this._valuesMap)) {\n            // no change in valuesMap\n            return;\n          }\n\n          this._valuesMap = valuesMap;\n          this.setComponent();\n        };\n\n        _proto.setComponent = function setComponent() {\n          var _this2 = this;\n\n          var formValuesSelector = function formValuesSelector(_, _ref2) {\n            var sectionPrefix = _ref2.sectionPrefix;\n            // Yes, we're only using connect() for listening to updates.\n            // The second argument needs to be there so that connect calls\n            // the selector when props change\n            var getValues = _this2.props._reduxForm.getValues;\n            var values = getValues();\n            return _mapValues(_this2._valuesMap, function (path) {\n              return getIn(values, prefixName(_this2.props, path));\n            });\n          };\n\n          this.Component = connect(formValuesSelector, function () {\n            return {};\n          } // ignore dispatch\n          )(function (_ref3) {\n            var sectionPrefix = _ref3.sectionPrefix,\n                otherProps = _objectWithoutPropertiesLoose(_ref3, [\"sectionPrefix\"]);\n\n            return React.createElement(Component, otherProps);\n          });\n        };\n\n        return FormValues;\n      }(React.Component);\n\n      return withReduxForm(FormValues);\n    };\n  };\n}"]},"metadata":{},"sourceType":"module"}