{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gethi\\\\Desktop\\\\React Apps\\\\streams\\\\client\\\\src\\\\components\\\\streams\\\\StreamShow.js\";\nimport React from \"react\";\nimport flv from \"flv.js\";\nimport { connect } from \"react-redux\";\nimport { fetchStream } from \"../../actions\";\n\nclass StreamShow extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      const {\n        id\n      } = this.props.match.params.id;\n      this.props.fetchStream(id);\n      this.buildPlayer();\n    };\n\n    this.videoRef = React.createRef();\n  }\n\n  buildPlayer() {\n    if (this.player || !this.props.stream) {\n      return;\n    }\n\n    const {\n      id\n    } = this.props.match.params.id;\n    this.player = flv.createPlayer({\n      type: \"flv\",\n      url: `http://localhost:8000/live/${id}.flv`\n    });\n    this.player.attachMediaElement(this.videoRef.current);\n    this.player.load();\n  }\n\n  render() {\n    if (!this.props.stream) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }\n      }, \" Loading...\");\n    }\n\n    const {\n      title,\n      description\n    } = this.props.stream;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"video\", {\n      ref: this.videoRef,\n      style: {\n        width: \"100%\"\n      },\n      controls: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 5\n      }\n    }, title), /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 5\n      }\n    }, description));\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    stream: state.streams[ownProps.match.params.id]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStream\n})(StreamShow);","map":{"version":3,"sources":["C:/Users/gethi/Desktop/React Apps/streams/client/src/components/streams/StreamShow.js"],"names":["React","flv","connect","fetchStream","StreamShow","Component","constructor","props","componentDidMount","id","match","params","buildPlayer","videoRef","createRef","player","stream","createPlayer","type","url","attachMediaElement","current","load","render","title","description","width","mapStateToProps","state","ownProps","streams"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,QAAhB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,QAA4B,eAA5B;;AAEA,MAAMC,UAAN,SAAyBJ,KAAK,CAACK,SAA/B,CAAyC;AACxCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,UAAMA,KAAN;;AADkB,SAInBC,iBAJmB,GAIC,MAAM;AACzB,YAAM;AAAEC,QAAAA;AAAF,UAAS,KAAKF,KAAL,CAAWG,KAAX,CAAiBC,MAAjB,CAAwBF,EAAvC;AACA,WAAKF,KAAL,CAAWJ,WAAX,CAAuBM,EAAvB;AACA,WAAKG,WAAL;AACA,KARkB;;AAElB,SAAKC,QAAL,GAAgBb,KAAK,CAACc,SAAN,EAAhB;AACA;;AAMDF,EAAAA,WAAW,GAAG;AACb,QAAI,KAAKG,MAAL,IAAe,CAAC,KAAKR,KAAL,CAAWS,MAA/B,EAAuC;AACtC;AACA;;AACD,UAAM;AAAEP,MAAAA;AAAF,QAAS,KAAKF,KAAL,CAAWG,KAAX,CAAiBC,MAAjB,CAAwBF,EAAvC;AAEA,SAAKM,MAAL,GAAcd,GAAG,CAACgB,YAAJ,CAAiB;AAC9BC,MAAAA,IAAI,EAAE,KADwB;AAE9BC,MAAAA,GAAG,EAAG,8BAA6BV,EAAG;AAFR,KAAjB,CAAd;AAIA,SAAKM,MAAL,CAAYK,kBAAZ,CAA+B,KAAKP,QAAL,CAAcQ,OAA7C;AACA,SAAKN,MAAL,CAAYO,IAAZ;AACA;;AAEDC,EAAAA,MAAM,GAAG;AACR,QAAI,CAAC,KAAKhB,KAAL,CAAWS,MAAhB,EAAwB;AACvB,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAP;AACA;;AACD,UAAM;AAAEQ,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAyB,KAAKlB,KAAL,CAAWS,MAA1C;AACA,wBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC;AAAO,MAAA,GAAG,EAAE,KAAKH,QAAjB;AAA2B,MAAA,KAAK,EAAE;AAAEa,QAAAA,KAAK,EAAE;AAAT,OAAlC;AAAqD,MAAA,QAAQ,MAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,eAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKF,KAAL,CAFD,eAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKC,WAAL,CAHD,CADD;AAOA;;AApCuC;;AAsCzC,MAAME,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC5C,SAAO;AAAEb,IAAAA,MAAM,EAAEY,KAAK,CAACE,OAAN,CAAcD,QAAQ,CAACnB,KAAT,CAAeC,MAAf,CAAsBF,EAApC;AAAV,GAAP;AACA,CAFD;;AAGA,eAAeP,OAAO,CAACyB,eAAD,EAAkB;AAAExB,EAAAA;AAAF,CAAlB,CAAP,CAA0CC,UAA1C,CAAf","sourcesContent":["import React from \"react\";\r\nimport flv from \"flv.js\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchStream } from \"../../actions\";\r\n\r\nclass StreamShow extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.videoRef = React.createRef();\r\n\t}\r\n\tcomponentDidMount = () => {\r\n\t\tconst { id } = this.props.match.params.id;\r\n\t\tthis.props.fetchStream(id);\r\n\t\tthis.buildPlayer();\r\n\t};\r\n\tbuildPlayer() {\r\n\t\tif (this.player || !this.props.stream) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst { id } = this.props.match.params.id;\r\n\r\n\t\tthis.player = flv.createPlayer({\r\n\t\t\ttype: \"flv\",\r\n\t\t\turl: `http://localhost:8000/live/${id}.flv`\r\n\t\t});\r\n\t\tthis.player.attachMediaElement(this.videoRef.current);\r\n\t\tthis.player.load();\r\n\t}\r\n\r\n\trender() {\r\n\t\tif (!this.props.stream) {\r\n\t\t\treturn <div> Loading...</div>;\r\n\t\t}\r\n\t\tconst { title, description } = this.props.stream;\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<video ref={this.videoRef} style={{ width: \"100%\" }} controls />\r\n\t\t\t\t<h1>{title}</h1>\r\n\t\t\t\t<h5>{description}</h5>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\nconst mapStateToProps = (state, ownProps) => {\r\n\treturn { stream: state.streams[ownProps.match.params.id] };\r\n};\r\nexport default connect(mapStateToProps, { fetchStream })(StreamShow);\r\n"]},"metadata":{},"sourceType":"module"}