{"ast":null,"code":"import invariant from 'invariant';\nimport plain from './structure/plain';\nexport default function createFormValueSelector(_ref) {\n  var getIn = _ref.getIn;\n  return function (form, getFormState) {\n    invariant(form, 'Form value must be specified');\n\n    var nonNullGetFormState = getFormState || function (state) {\n      return getIn(state, 'form');\n    };\n\n    return function (state) {\n      for (var _len = arguments.length, fields = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        fields[_key - 1] = arguments[_key];\n      }\n\n      invariant(fields.length, 'No fields specified');\n      return fields.length === 1 ? // only selecting one field, so return its value\n      getIn(nonNullGetFormState(state), form + \".values.\" + fields[0]) : // selecting many fields, so return an object of field values\n      fields.reduce(function (accumulator, field) {\n        var value = getIn(nonNullGetFormState(state), form + \".values.\" + field);\n        return value === undefined ? accumulator : plain.setIn(accumulator, field, value);\n      }, {});\n    };\n  };\n}","map":{"version":3,"sources":["C:/Users/gethi/Desktop/React Apps/streams/client/node_modules/redux-form/es/createFormValueSelector.js"],"names":["invariant","plain","createFormValueSelector","_ref","getIn","form","getFormState","nonNullGetFormState","state","_len","arguments","length","fields","Array","_key","reduce","accumulator","field","value","undefined","setIn"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,WAAtB;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,eAAe,SAASC,uBAAT,CAAiCC,IAAjC,EAAuC;AACpD,MAAIC,KAAK,GAAGD,IAAI,CAACC,KAAjB;AACA,SAAO,UAAUC,IAAV,EAAgBC,YAAhB,EAA8B;AACnCN,IAAAA,SAAS,CAACK,IAAD,EAAO,8BAAP,CAAT;;AAEA,QAAIE,mBAAmB,GAAGD,YAAY,IAAI,UAAUE,KAAV,EAAiB;AACzD,aAAOJ,KAAK,CAACI,KAAD,EAAQ,MAAR,CAAZ;AACD,KAFD;;AAIA,WAAO,UAAUA,KAAV,EAAiB;AACtB,WAAK,IAAIC,IAAI,GAAGC,SAAS,CAACC,MAArB,EAA6BC,MAAM,GAAG,IAAIC,KAAJ,CAAUJ,IAAI,GAAG,CAAP,GAAWA,IAAI,GAAG,CAAlB,GAAsB,CAAhC,CAAtC,EAA0EK,IAAI,GAAG,CAAtF,EAAyFA,IAAI,GAAGL,IAAhG,EAAsGK,IAAI,EAA1G,EAA8G;AAC5GF,QAAAA,MAAM,CAACE,IAAI,GAAG,CAAR,CAAN,GAAmBJ,SAAS,CAACI,IAAD,CAA5B;AACD;;AAEDd,MAAAA,SAAS,CAACY,MAAM,CAACD,MAAR,EAAgB,qBAAhB,CAAT;AACA,aAAOC,MAAM,CAACD,MAAP,KAAkB,CAAlB,GAAsB;AAC7BP,MAAAA,KAAK,CAACG,mBAAmB,CAACC,KAAD,CAApB,EAA6BH,IAAI,GAAG,UAAP,GAAoBO,MAAM,CAAC,CAAD,CAAvD,CADE,GAC4D;AACnEA,MAAAA,MAAM,CAACG,MAAP,CAAc,UAAUC,WAAV,EAAuBC,KAAvB,EAA8B;AAC1C,YAAIC,KAAK,GAAGd,KAAK,CAACG,mBAAmB,CAACC,KAAD,CAApB,EAA6BH,IAAI,GAAG,UAAP,GAAoBY,KAAjD,CAAjB;AACA,eAAOC,KAAK,KAAKC,SAAV,GAAsBH,WAAtB,GAAoCf,KAAK,CAACmB,KAAN,CAAYJ,WAAZ,EAAyBC,KAAzB,EAAgCC,KAAhC,CAA3C;AACD,OAHD,EAGG,EAHH,CAFA;AAMD,KAZD;AAaD,GApBD;AAqBD","sourcesContent":["import invariant from 'invariant';\nimport plain from './structure/plain';\nexport default function createFormValueSelector(_ref) {\n  var getIn = _ref.getIn;\n  return function (form, getFormState) {\n    invariant(form, 'Form value must be specified');\n\n    var nonNullGetFormState = getFormState || function (state) {\n      return getIn(state, 'form');\n    };\n\n    return function (state) {\n      for (var _len = arguments.length, fields = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        fields[_key - 1] = arguments[_key];\n      }\n\n      invariant(fields.length, 'No fields specified');\n      return fields.length === 1 ? // only selecting one field, so return its value\n      getIn(nonNullGetFormState(state), form + \".values.\" + fields[0]) : // selecting many fields, so return an object of field values\n      fields.reduce(function (accumulator, field) {\n        var value = getIn(nonNullGetFormState(state), form + \".values.\" + field);\n        return value === undefined ? accumulator : plain.setIn(accumulator, field, value);\n      }, {});\n    };\n  };\n}"]},"metadata":{},"sourceType":"module"}