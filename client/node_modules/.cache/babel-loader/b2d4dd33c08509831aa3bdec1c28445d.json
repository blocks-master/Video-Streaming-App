{"ast":null,"code":"/*\n * Copyright (C) 2016 Bilibili. All Rights Reserved.\n *\n * @author zheng qian <xqq@xqq.im>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nclass ParamSeekHandler {\n  constructor(paramStart, paramEnd) {\n    this._startName = paramStart;\n    this._endName = paramEnd;\n  }\n\n  getConfig(baseUrl, range) {\n    let url = baseUrl;\n\n    if (range.from !== 0 || range.to !== -1) {\n      let needAnd = true;\n\n      if (url.indexOf('?') === -1) {\n        url += '?';\n        needAnd = false;\n      }\n\n      if (needAnd) {\n        url += '&';\n      }\n\n      url += `${this._startName}=${range.from.toString()}`;\n\n      if (range.to !== -1) {\n        url += `&${this._endName}=${range.to.toString()}`;\n      }\n    }\n\n    return {\n      url: url,\n      headers: {}\n    };\n  }\n\n  removeURLParameters(seekedURL) {\n    let baseURL = seekedURL.split('?')[0];\n    let params = undefined;\n    let queryIndex = seekedURL.indexOf('?');\n\n    if (queryIndex !== -1) {\n      params = seekedURL.substring(queryIndex + 1);\n    }\n\n    let resultParams = '';\n\n    if (params != undefined && params.length > 0) {\n      let pairs = params.split('&');\n\n      for (let i = 0; i < pairs.length; i++) {\n        let pair = pairs[i].split('=');\n        let requireAnd = i > 0;\n\n        if (pair[0] !== this._startName && pair[0] !== this._endName) {\n          if (requireAnd) {\n            resultParams += '&';\n          }\n\n          resultParams += pairs[i];\n        }\n      }\n    }\n\n    return resultParams.length === 0 ? baseURL : baseURL + '?' + resultParams;\n  }\n\n}\n\nexport default ParamSeekHandler;","map":{"version":3,"sources":["C:/Users/gethi/Desktop/React Apps/streams/client/node_modules/flv.js/src/io/param-seek-handler.js"],"names":["ParamSeekHandler","constructor","paramStart","paramEnd","_startName","_endName","getConfig","baseUrl","range","url","from","to","needAnd","indexOf","toString","headers","removeURLParameters","seekedURL","baseURL","split","params","undefined","queryIndex","substring","resultParams","length","pairs","i","pair","requireAnd"],"mappings":"AAAA;;;;;;;;;;;;;;;;;AAkBA,MAAMA,gBAAN,CAAuB;AAEnBC,EAAAA,WAAW,CAACC,UAAD,EAAaC,QAAb,EAAuB;AAC9B,SAAKC,UAAL,GAAkBF,UAAlB;AACA,SAAKG,QAAL,GAAgBF,QAAhB;AACH;;AAEDG,EAAAA,SAAS,CAACC,OAAD,EAAUC,KAAV,EAAiB;AACtB,QAAIC,GAAG,GAAGF,OAAV;;AAEA,QAAIC,KAAK,CAACE,IAAN,KAAe,CAAf,IAAoBF,KAAK,CAACG,EAAN,KAAa,CAAC,CAAtC,EAAyC;AACrC,UAAIC,OAAO,GAAG,IAAd;;AACA,UAAIH,GAAG,CAACI,OAAJ,CAAY,GAAZ,MAAqB,CAAC,CAA1B,EAA6B;AACzBJ,QAAAA,GAAG,IAAI,GAAP;AACAG,QAAAA,OAAO,GAAG,KAAV;AACH;;AAED,UAAIA,OAAJ,EAAa;AACTH,QAAAA,GAAG,IAAI,GAAP;AACH;;AAEDA,MAAAA,GAAG,IAAK,GAAE,KAAKL,UAAW,IAAGI,KAAK,CAACE,IAAN,CAAWI,QAAX,EAAsB,EAAnD;;AAEA,UAAIN,KAAK,CAACG,EAAN,KAAa,CAAC,CAAlB,EAAqB;AACjBF,QAAAA,GAAG,IAAK,IAAG,KAAKJ,QAAS,IAAGG,KAAK,CAACG,EAAN,CAASG,QAAT,EAAoB,EAAhD;AACH;AACJ;;AAED,WAAO;AACHL,MAAAA,GAAG,EAAEA,GADF;AAEHM,MAAAA,OAAO,EAAE;AAFN,KAAP;AAIH;;AAEDC,EAAAA,mBAAmB,CAACC,SAAD,EAAY;AAC3B,QAAIC,OAAO,GAAGD,SAAS,CAACE,KAAV,CAAgB,GAAhB,EAAqB,CAArB,CAAd;AACA,QAAIC,MAAM,GAAGC,SAAb;AAEA,QAAIC,UAAU,GAAGL,SAAS,CAACJ,OAAV,CAAkB,GAAlB,CAAjB;;AACA,QAAIS,UAAU,KAAK,CAAC,CAApB,EAAuB;AACnBF,MAAAA,MAAM,GAAGH,SAAS,CAACM,SAAV,CAAoBD,UAAU,GAAG,CAAjC,CAAT;AACH;;AAED,QAAIE,YAAY,GAAG,EAAnB;;AAEA,QAAIJ,MAAM,IAAIC,SAAV,IAAuBD,MAAM,CAACK,MAAP,GAAgB,CAA3C,EAA8C;AAC1C,UAAIC,KAAK,GAAGN,MAAM,CAACD,KAAP,CAAa,GAAb,CAAZ;;AAEA,WAAK,IAAIQ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,KAAK,CAACD,MAA1B,EAAkCE,CAAC,EAAnC,EAAuC;AACnC,YAAIC,IAAI,GAAGF,KAAK,CAACC,CAAD,CAAL,CAASR,KAAT,CAAe,GAAf,CAAX;AACA,YAAIU,UAAU,GAAIF,CAAC,GAAG,CAAtB;;AAEA,YAAIC,IAAI,CAAC,CAAD,CAAJ,KAAY,KAAKxB,UAAjB,IAA+BwB,IAAI,CAAC,CAAD,CAAJ,KAAY,KAAKvB,QAApD,EAA8D;AAC1D,cAAIwB,UAAJ,EAAgB;AACZL,YAAAA,YAAY,IAAI,GAAhB;AACH;;AACDA,UAAAA,YAAY,IAAIE,KAAK,CAACC,CAAD,CAArB;AACH;AACJ;AACJ;;AAED,WAAQH,YAAY,CAACC,MAAb,KAAwB,CAAzB,GAA8BP,OAA9B,GAAwCA,OAAO,GAAG,GAAV,GAAgBM,YAA/D;AACH;;AA9DkB;;AAkEvB,eAAexB,gBAAf","sourcesContent":["/*\n * Copyright (C) 2016 Bilibili. All Rights Reserved.\n *\n * @author zheng qian <xqq@xqq.im>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nclass ParamSeekHandler {\n\n    constructor(paramStart, paramEnd) {\n        this._startName = paramStart;\n        this._endName = paramEnd;\n    }\n\n    getConfig(baseUrl, range) {\n        let url = baseUrl;\n\n        if (range.from !== 0 || range.to !== -1) {\n            let needAnd = true;\n            if (url.indexOf('?') === -1) {\n                url += '?';\n                needAnd = false;\n            }\n\n            if (needAnd) {\n                url += '&';\n            }\n\n            url += `${this._startName}=${range.from.toString()}`;\n\n            if (range.to !== -1) {\n                url += `&${this._endName}=${range.to.toString()}`;\n            }\n        }\n\n        return {\n            url: url,\n            headers: {}\n        };\n    }\n\n    removeURLParameters(seekedURL) {\n        let baseURL = seekedURL.split('?')[0];\n        let params = undefined;\n\n        let queryIndex = seekedURL.indexOf('?');\n        if (queryIndex !== -1) {\n            params = seekedURL.substring(queryIndex + 1);\n        }\n\n        let resultParams = '';\n\n        if (params != undefined && params.length > 0) {\n            let pairs = params.split('&');\n\n            for (let i = 0; i < pairs.length; i++) {\n                let pair = pairs[i].split('=');\n                let requireAnd = (i > 0);\n\n                if (pair[0] !== this._startName && pair[0] !== this._endName) {\n                    if (requireAnd) {\n                        resultParams += '&';\n                    }\n                    resultParams += pairs[i];\n                }\n            }\n        }\n\n        return (resultParams.length === 0) ? baseURL : baseURL + '?' + resultParams;\n    }\n\n}\n\nexport default ParamSeekHandler;"]},"metadata":{},"sourceType":"module"}