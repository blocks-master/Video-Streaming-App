{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nimport _isFunction from \"lodash/isFunction\";\nimport { ARRAY_INSERT, ARRAY_MOVE, ARRAY_POP, ARRAY_PUSH, ARRAY_REMOVE, ARRAY_REMOVE_ALL, ARRAY_SHIFT, ARRAY_SPLICE, ARRAY_SWAP, ARRAY_UNSHIFT, AUTOFILL, BLUR, CHANGE, CLEAR_ASYNC_ERROR, CLEAR_SUBMIT, CLEAR_SUBMIT_ERRORS, DESTROY, FOCUS, INITIALIZE, prefix, REGISTER_FIELD, RESET, RESET_SECTION, SET_SUBMIT_FAILED, SET_SUBMIT_SUCCEEDED, START_ASYNC_VALIDATION, START_SUBMIT, STOP_ASYNC_VALIDATION, STOP_SUBMIT, SUBMIT, TOUCH, UNREGISTER_FIELD, UNTOUCH, UPDATE_SYNC_ERRORS, CLEAR_FIELDS, UPDATE_SYNC_WARNINGS } from './actionTypes';\nimport createDeleteInWithCleanUp from './deleteInWithCleanUp';\nimport plain from './structure/plain';\n\nvar shouldDelete = function shouldDelete(_ref) {\n  var getIn = _ref.getIn;\n  return function (state, path) {\n    var initialValuesPath = null;\n\n    if (/^values/.test(path)) {\n      initialValuesPath = path.replace('values', 'initial');\n    }\n\n    var initialValueComparison = initialValuesPath ? getIn(state, initialValuesPath) === undefined : true;\n    return getIn(state, path) !== undefined && initialValueComparison;\n  };\n};\n\nvar isReduxFormAction = function isReduxFormAction(action) {\n  return action && action.type && action.type.length > prefix.length && action.type.substring(0, prefix.length) === prefix;\n};\n\nfunction createReducer(structure) {\n  var _behaviors;\n\n  var deepEqual = structure.deepEqual,\n      empty = structure.empty,\n      forEach = structure.forEach,\n      getIn = structure.getIn,\n      setIn = structure.setIn,\n      deleteIn = structure.deleteIn,\n      fromJS = structure.fromJS,\n      keys = structure.keys,\n      size = structure.size,\n      some = structure.some,\n      splice = structure.splice;\n  var deleteInWithCleanUp = createDeleteInWithCleanUp(structure)(shouldDelete);\n  var plainDeleteInWithCleanUp = createDeleteInWithCleanUp(plain)(shouldDelete);\n\n  var doSplice = function doSplice(state, key, field, index, removeNum, value, force) {\n    var existing = getIn(state, key + \".\" + field);\n    return existing || force ? setIn(state, key + \".\" + field, splice(existing, index, removeNum, value)) : state;\n  };\n\n  var doPlainSplice = function doPlainSplice(state, key, field, index, removeNum, value, force) {\n    var slice = getIn(state, key);\n    var existing = plain.getIn(slice, field);\n    return existing || force ? setIn(state, key, plain.setIn(slice, field, plain.splice(existing, index, removeNum, value))) : state;\n  };\n\n  var rootKeys = ['values', 'fields', 'submitErrors', 'asyncErrors'];\n\n  var arraySplice = function arraySplice(state, field, index, removeNum, value) {\n    var result = state;\n    var nonValuesValue = value != null ? empty : undefined;\n    result = doSplice(result, 'values', field, index, removeNum, value, true);\n    result = doSplice(result, 'fields', field, index, removeNum, nonValuesValue);\n    result = doPlainSplice(result, 'syncErrors', field, index, removeNum, undefined);\n    result = doPlainSplice(result, 'syncWarnings', field, index, removeNum, undefined);\n    result = doSplice(result, 'submitErrors', field, index, removeNum, undefined);\n    result = doSplice(result, 'asyncErrors', field, index, removeNum, undefined);\n    return result;\n  };\n\n  var behaviors = (_behaviors = {}, _behaviors[ARRAY_INSERT] = function (state, _ref2) {\n    var _ref2$meta = _ref2.meta,\n        field = _ref2$meta.field,\n        index = _ref2$meta.index,\n        payload = _ref2.payload;\n    return arraySplice(state, field, index, 0, payload);\n  }, _behaviors[ARRAY_MOVE] = function (state, _ref3) {\n    var _ref3$meta = _ref3.meta,\n        field = _ref3$meta.field,\n        from = _ref3$meta.from,\n        to = _ref3$meta.to;\n    var array = getIn(state, \"values.\" + field);\n    var length = array ? size(array) : 0;\n    var result = state;\n\n    if (length) {\n      rootKeys.forEach(function (key) {\n        var path = key + \".\" + field;\n\n        if (getIn(result, path)) {\n          var value = getIn(result, path + \"[\" + from + \"]\");\n          result = setIn(result, path, splice(getIn(result, path), from, 1)); // remove\n\n          result = setIn(result, path, splice(getIn(result, path), to, 0, value)); // insert\n        }\n      });\n    }\n\n    return result;\n  }, _behaviors[ARRAY_POP] = function (state, _ref4) {\n    var field = _ref4.meta.field;\n    var array = getIn(state, \"values.\" + field);\n    var length = array ? size(array) : 0;\n    return length ? arraySplice(state, field, length - 1, 1) : state;\n  }, _behaviors[ARRAY_PUSH] = function (state, _ref5) {\n    var field = _ref5.meta.field,\n        payload = _ref5.payload;\n    var array = getIn(state, \"values.\" + field);\n    var length = array ? size(array) : 0;\n    return arraySplice(state, field, length, 0, payload);\n  }, _behaviors[ARRAY_REMOVE] = function (state, _ref6) {\n    var _ref6$meta = _ref6.meta,\n        field = _ref6$meta.field,\n        index = _ref6$meta.index;\n    return arraySplice(state, field, index, 1);\n  }, _behaviors[ARRAY_REMOVE_ALL] = function (state, _ref7) {\n    var field = _ref7.meta.field;\n    var array = getIn(state, \"values.\" + field);\n    var length = array ? size(array) : 0;\n    return length ? arraySplice(state, field, 0, length) : state;\n  }, _behaviors[ARRAY_SHIFT] = function (state, _ref8) {\n    var field = _ref8.meta.field;\n    return arraySplice(state, field, 0, 1);\n  }, _behaviors[ARRAY_SPLICE] = function (state, _ref9) {\n    var _ref9$meta = _ref9.meta,\n        field = _ref9$meta.field,\n        index = _ref9$meta.index,\n        removeNum = _ref9$meta.removeNum,\n        payload = _ref9.payload;\n    return arraySplice(state, field, index, removeNum, payload);\n  }, _behaviors[ARRAY_SWAP] = function (state, _ref10) {\n    var _ref10$meta = _ref10.meta,\n        field = _ref10$meta.field,\n        indexA = _ref10$meta.indexA,\n        indexB = _ref10$meta.indexB;\n    var result = state;\n    rootKeys.forEach(function (key) {\n      var valueA = getIn(result, key + \".\" + field + \"[\" + indexA + \"]\");\n      var valueB = getIn(result, key + \".\" + field + \"[\" + indexB + \"]\");\n\n      if (valueA !== undefined || valueB !== undefined) {\n        result = setIn(result, key + \".\" + field + \"[\" + indexA + \"]\", valueB);\n        result = setIn(result, key + \".\" + field + \"[\" + indexB + \"]\", valueA);\n      }\n    });\n    return result;\n  }, _behaviors[ARRAY_UNSHIFT] = function (state, _ref11) {\n    var field = _ref11.meta.field,\n        payload = _ref11.payload;\n    return arraySplice(state, field, 0, 0, payload);\n  }, _behaviors[AUTOFILL] = function (state, _ref12) {\n    var field = _ref12.meta.field,\n        payload = _ref12.payload;\n    var result = state;\n    result = deleteInWithCleanUp(result, \"asyncErrors.\" + field);\n    result = deleteInWithCleanUp(result, \"submitErrors.\" + field);\n    result = setIn(result, \"fields.\" + field + \".autofilled\", true);\n    result = setIn(result, \"values.\" + field, payload);\n    return result;\n  }, _behaviors[BLUR] = function (state, _ref13) {\n    var _ref13$meta = _ref13.meta,\n        field = _ref13$meta.field,\n        touch = _ref13$meta.touch,\n        payload = _ref13.payload;\n    var result = state;\n    var initial = getIn(result, \"initial.\" + field);\n\n    if (initial === undefined && payload === '') {\n      result = deleteInWithCleanUp(result, \"values.\" + field);\n    } else if (payload !== undefined) {\n      result = setIn(result, \"values.\" + field, payload);\n    }\n\n    if (field === getIn(result, 'active')) {\n      result = deleteIn(result, 'active');\n    }\n\n    result = deleteIn(result, \"fields.\" + field + \".active\");\n\n    if (touch) {\n      result = setIn(result, \"fields.\" + field + \".touched\", true);\n      result = setIn(result, 'anyTouched', true);\n    }\n\n    return result;\n  }, _behaviors[CHANGE] = function (state, _ref14) {\n    var _ref14$meta = _ref14.meta,\n        field = _ref14$meta.field,\n        touch = _ref14$meta.touch,\n        persistentSubmitErrors = _ref14$meta.persistentSubmitErrors,\n        payload = _ref14.payload;\n    var result = state;\n    var initial = getIn(result, \"initial.\" + field);\n\n    if (initial === undefined && payload === '' || payload === undefined) {\n      result = deleteInWithCleanUp(result, \"values.\" + field);\n    } else if (_isFunction(payload)) {\n      var fieldCurrentValue = getIn(state, \"values.\" + field);\n      result = setIn(result, \"values.\" + field, payload(fieldCurrentValue, state.values));\n    } else {\n      result = setIn(result, \"values.\" + field, payload);\n    }\n\n    result = deleteInWithCleanUp(result, \"asyncErrors.\" + field);\n\n    if (!persistentSubmitErrors) {\n      result = deleteInWithCleanUp(result, \"submitErrors.\" + field);\n    }\n\n    result = deleteInWithCleanUp(result, \"fields.\" + field + \".autofilled\");\n\n    if (touch) {\n      result = setIn(result, \"fields.\" + field + \".touched\", true);\n      result = setIn(result, 'anyTouched', true);\n    }\n\n    return result;\n  }, _behaviors[CLEAR_SUBMIT] = function (state) {\n    return deleteIn(state, 'triggerSubmit');\n  }, _behaviors[CLEAR_SUBMIT_ERRORS] = function (state) {\n    var result = state;\n    result = deleteInWithCleanUp(result, 'submitErrors');\n    result = deleteIn(result, 'error');\n    return result;\n  }, _behaviors[CLEAR_ASYNC_ERROR] = function (state, _ref15) {\n    var field = _ref15.meta.field;\n    return deleteIn(state, \"asyncErrors.\" + field);\n  }, _behaviors[CLEAR_FIELDS] = function (state, _ref16) {\n    var _ref16$meta = _ref16.meta,\n        keepTouched = _ref16$meta.keepTouched,\n        persistentSubmitErrors = _ref16$meta.persistentSubmitErrors,\n        fields = _ref16$meta.fields;\n    var result = state;\n    fields.forEach(function (field) {\n      result = deleteInWithCleanUp(result, \"asyncErrors.\" + field);\n\n      if (!persistentSubmitErrors) {\n        result = deleteInWithCleanUp(result, \"submitErrors.\" + field);\n      }\n\n      result = deleteInWithCleanUp(result, \"fields.\" + field + \".autofilled\");\n\n      if (!keepTouched) {\n        result = deleteIn(result, \"fields.\" + field + \".touched\");\n      }\n\n      var values = getIn(state, \"initial.\" + field);\n      result = values ? setIn(result, \"values.\" + field, values) : deleteInWithCleanUp(result, \"values.\" + field);\n    });\n    var anyTouched = some(keys(getIn(result, 'registeredFields')), function (key) {\n      return getIn(result, \"fields.\" + key + \".touched\");\n    });\n    result = anyTouched ? setIn(result, 'anyTouched', true) : deleteIn(result, 'anyTouched');\n    return result;\n  }, _behaviors[FOCUS] = function (state, _ref17) {\n    var field = _ref17.meta.field;\n    var result = state;\n    var previouslyActive = getIn(state, 'active');\n    result = deleteIn(result, \"fields.\" + previouslyActive + \".active\");\n    result = setIn(result, \"fields.\" + field + \".visited\", true);\n    result = setIn(result, \"fields.\" + field + \".active\", true);\n    result = setIn(result, 'active', field);\n    return result;\n  }, _behaviors[INITIALIZE] = function (state, _ref18) {\n    var payload = _ref18.payload,\n        _ref18$meta = _ref18.meta,\n        keepDirty = _ref18$meta.keepDirty,\n        keepSubmitSucceeded = _ref18$meta.keepSubmitSucceeded,\n        updateUnregisteredFields = _ref18$meta.updateUnregisteredFields,\n        keepValues = _ref18$meta.keepValues;\n    var mapData = fromJS(payload);\n    var result = empty; // clean all field state\n    // persist old warnings, they will get recalculated if the new form values are different from the old values\n\n    var warning = getIn(state, 'warning');\n\n    if (warning) {\n      result = setIn(result, 'warning', warning);\n    }\n\n    var syncWarnings = getIn(state, 'syncWarnings');\n\n    if (syncWarnings) {\n      result = setIn(result, 'syncWarnings', syncWarnings);\n    } // persist old errors, they will get recalculated if the new form values are different from the old values\n\n\n    var error = getIn(state, 'error');\n\n    if (error) {\n      result = setIn(result, 'error', error);\n    }\n\n    var syncErrors = getIn(state, 'syncErrors');\n\n    if (syncErrors) {\n      result = setIn(result, 'syncErrors', syncErrors);\n    }\n\n    var registeredFields = getIn(state, 'registeredFields');\n\n    if (registeredFields) {\n      result = setIn(result, 'registeredFields', registeredFields);\n    }\n\n    var previousValues = getIn(state, 'values');\n    var previousInitialValues = getIn(state, 'initial');\n    var newInitialValues = mapData;\n    var newValues = previousValues;\n\n    if (keepDirty && registeredFields) {\n      if (!deepEqual(newInitialValues, previousInitialValues)) {\n        //\n        // Keep the value of dirty fields while updating the value of\n        // pristine fields. This way, apps can reinitialize forms while\n        // avoiding stomping on user edits.\n        //\n        // Note 1: The initialize action replaces all initial values\n        // regardless of keepDirty.\n        //\n        // Note 2: When a field is dirty, keepDirty is enabled, and the field\n        // value is the same as the new initial value for the field, the\n        // initialize action causes the field to become pristine. That effect\n        // is what we want.\n        //\n        var overwritePristineValue = function overwritePristineValue(name) {\n          var previousInitialValue = getIn(previousInitialValues, name);\n          var previousValue = getIn(previousValues, name);\n\n          if (deepEqual(previousValue, previousInitialValue)) {\n            // Overwrite the old pristine value with the new pristine value\n            var newInitialValue = getIn(newInitialValues, name); // This check prevents any 'setIn' call that would create useless\n            // nested objects, since the path to the new field value would\n            // evaluate to the same (especially for undefined values)\n\n            if (getIn(newValues, name) !== newInitialValue) {\n              newValues = setIn(newValues, name, newInitialValue);\n            }\n          }\n        };\n\n        if (!updateUnregisteredFields) {\n          forEach(keys(registeredFields), function (name) {\n            return overwritePristineValue(name);\n          });\n        }\n\n        forEach(keys(newInitialValues), function (name) {\n          var previousInitialValue = getIn(previousInitialValues, name);\n\n          if (typeof previousInitialValue === 'undefined') {\n            // Add new values at the root level.\n            var newInitialValue = getIn(newInitialValues, name);\n            newValues = setIn(newValues, name, newInitialValue);\n          }\n\n          if (updateUnregisteredFields) {\n            overwritePristineValue(name);\n          }\n        });\n      }\n    } else {\n      newValues = newInitialValues;\n    }\n\n    if (keepValues) {\n      forEach(keys(previousValues), function (name) {\n        var previousValue = getIn(previousValues, name);\n        newValues = setIn(newValues, name, previousValue);\n      });\n      forEach(keys(previousInitialValues), function (name) {\n        var previousInitialValue = getIn(previousInitialValues, name);\n        newInitialValues = setIn(newInitialValues, name, previousInitialValue);\n      });\n    }\n\n    if (keepSubmitSucceeded && getIn(state, 'submitSucceeded')) {\n      result = setIn(result, 'submitSucceeded', true);\n    }\n\n    result = setIn(result, 'values', newValues);\n    result = setIn(result, 'initial', newInitialValues);\n    return result;\n  }, _behaviors[REGISTER_FIELD] = function (state, _ref19) {\n    var _ref19$payload = _ref19.payload,\n        name = _ref19$payload.name,\n        type = _ref19$payload.type;\n    var key = \"registeredFields['\" + name + \"']\";\n    var field = getIn(state, key);\n\n    if (field) {\n      var count = getIn(field, 'count') + 1;\n      field = setIn(field, 'count', count);\n    } else {\n      field = fromJS({\n        name: name,\n        type: type,\n        count: 1\n      });\n    }\n\n    return setIn(state, key, field);\n  }, _behaviors[RESET] = function (state) {\n    var result = empty;\n    var registeredFields = getIn(state, 'registeredFields');\n\n    if (registeredFields) {\n      result = setIn(result, 'registeredFields', registeredFields);\n    }\n\n    var values = getIn(state, 'initial');\n\n    if (values) {\n      result = setIn(result, 'values', values);\n      result = setIn(result, 'initial', values);\n    }\n\n    return result;\n  }, _behaviors[RESET_SECTION] = function (state, _ref20) {\n    var sections = _ref20.meta.sections;\n    var result = state;\n    sections.forEach(function (section) {\n      result = deleteInWithCleanUp(result, \"asyncErrors.\" + section);\n      result = deleteInWithCleanUp(result, \"submitErrors.\" + section);\n      result = deleteInWithCleanUp(result, \"fields.\" + section);\n      var values = getIn(state, \"initial.\" + section);\n      result = values ? setIn(result, \"values.\" + section, values) : deleteInWithCleanUp(result, \"values.\" + section);\n    });\n    var anyTouched = some(keys(getIn(result, 'registeredFields')), function (key) {\n      return getIn(result, \"fields.\" + key + \".touched\");\n    });\n    result = anyTouched ? setIn(result, 'anyTouched', true) : deleteIn(result, 'anyTouched');\n    return result;\n  }, _behaviors[SUBMIT] = function (state) {\n    return setIn(state, 'triggerSubmit', true);\n  }, _behaviors[START_ASYNC_VALIDATION] = function (state, _ref21) {\n    var field = _ref21.meta.field;\n    return setIn(state, 'asyncValidating', field || true);\n  }, _behaviors[START_SUBMIT] = function (state) {\n    return setIn(state, 'submitting', true);\n  }, _behaviors[STOP_ASYNC_VALIDATION] = function (state, _ref22) {\n    var payload = _ref22.payload;\n    var result = state;\n    result = deleteIn(result, 'asyncValidating');\n\n    if (payload && Object.keys(payload).length) {\n      var _error = payload._error,\n          fieldErrors = _objectWithoutPropertiesLoose(payload, [\"_error\"]);\n\n      if (_error) {\n        result = setIn(result, 'error', _error);\n      }\n\n      if (Object.keys(fieldErrors).length) {\n        result = setIn(result, 'asyncErrors', fromJS(fieldErrors));\n      }\n    } else {\n      result = deleteIn(result, 'error');\n      result = deleteIn(result, 'asyncErrors');\n    }\n\n    return result;\n  }, _behaviors[STOP_SUBMIT] = function (state, _ref23) {\n    var payload = _ref23.payload;\n    var result = state;\n    result = deleteIn(result, 'submitting');\n    result = deleteIn(result, 'submitFailed');\n    result = deleteIn(result, 'submitSucceeded');\n\n    if (payload && Object.keys(payload).length) {\n      var _error = payload._error,\n          fieldErrors = _objectWithoutPropertiesLoose(payload, [\"_error\"]);\n\n      if (_error) {\n        result = setIn(result, 'error', _error);\n      } else {\n        result = deleteIn(result, 'error');\n      }\n\n      if (Object.keys(fieldErrors).length) {\n        result = setIn(result, 'submitErrors', fromJS(fieldErrors));\n      } else {\n        result = deleteIn(result, 'submitErrors');\n      }\n\n      result = setIn(result, 'submitFailed', true);\n    } else {\n      result = deleteIn(result, 'error');\n      result = deleteIn(result, 'submitErrors');\n    }\n\n    return result;\n  }, _behaviors[SET_SUBMIT_FAILED] = function (state, _ref24) {\n    var fields = _ref24.meta.fields;\n    var result = state;\n    result = setIn(result, 'submitFailed', true);\n    result = deleteIn(result, 'submitSucceeded');\n    result = deleteIn(result, 'submitting');\n    fields.forEach(function (field) {\n      return result = setIn(result, \"fields.\" + field + \".touched\", true);\n    });\n\n    if (fields.length) {\n      result = setIn(result, 'anyTouched', true);\n    }\n\n    return result;\n  }, _behaviors[SET_SUBMIT_SUCCEEDED] = function (state) {\n    var result = state;\n    result = deleteIn(result, 'submitFailed');\n    result = setIn(result, 'submitSucceeded', true);\n    return result;\n  }, _behaviors[TOUCH] = function (state, _ref25) {\n    var fields = _ref25.meta.fields;\n    var result = state;\n    fields.forEach(function (field) {\n      return result = setIn(result, \"fields.\" + field + \".touched\", true);\n    });\n    result = setIn(result, 'anyTouched', true);\n    return result;\n  }, _behaviors[UNREGISTER_FIELD] = function (state, _ref26) {\n    var _ref26$payload = _ref26.payload,\n        name = _ref26$payload.name,\n        destroyOnUnmount = _ref26$payload.destroyOnUnmount;\n    var result = state;\n    var key = \"registeredFields['\" + name + \"']\";\n    var field = getIn(result, key);\n\n    if (!field) {\n      return result;\n    }\n\n    var count = getIn(field, 'count') - 1;\n\n    if (count <= 0 && destroyOnUnmount) {\n      // Note: Cannot use deleteWithCleanUp here because of the flat nature of registeredFields\n      result = deleteIn(result, key);\n\n      if (deepEqual(getIn(result, 'registeredFields'), empty)) {\n        result = deleteIn(result, 'registeredFields');\n      }\n\n      var syncErrors = getIn(result, 'syncErrors');\n\n      if (syncErrors) {\n        syncErrors = plainDeleteInWithCleanUp(syncErrors, name);\n\n        if (plain.deepEqual(syncErrors, plain.empty)) {\n          result = deleteIn(result, 'syncErrors');\n        } else {\n          result = setIn(result, 'syncErrors', syncErrors);\n        }\n      }\n\n      var syncWarnings = getIn(result, 'syncWarnings');\n\n      if (syncWarnings) {\n        syncWarnings = plainDeleteInWithCleanUp(syncWarnings, name);\n\n        if (plain.deepEqual(syncWarnings, plain.empty)) {\n          result = deleteIn(result, 'syncWarnings');\n        } else {\n          result = setIn(result, 'syncWarnings', syncWarnings);\n        }\n      }\n\n      result = deleteInWithCleanUp(result, \"submitErrors.\" + name);\n      result = deleteInWithCleanUp(result, \"asyncErrors.\" + name);\n    } else {\n      field = setIn(field, 'count', count);\n      result = setIn(result, key, field);\n    }\n\n    return result;\n  }, _behaviors[UNTOUCH] = function (state, _ref27) {\n    var fields = _ref27.meta.fields;\n    var result = state;\n    fields.forEach(function (field) {\n      return result = deleteIn(result, \"fields.\" + field + \".touched\");\n    });\n    var anyTouched = some(keys(getIn(result, 'registeredFields')), function (key) {\n      return getIn(result, \"fields.\" + key + \".touched\");\n    });\n    result = anyTouched ? setIn(result, 'anyTouched', true) : deleteIn(result, 'anyTouched');\n    return result;\n  }, _behaviors[UPDATE_SYNC_ERRORS] = function (state, _ref28) {\n    var _ref28$payload = _ref28.payload,\n        syncErrors = _ref28$payload.syncErrors,\n        error = _ref28$payload.error;\n    var result = state;\n\n    if (error) {\n      result = setIn(result, 'error', error);\n      result = setIn(result, 'syncError', true);\n    } else {\n      result = deleteIn(result, 'error');\n      result = deleteIn(result, 'syncError');\n    }\n\n    if (Object.keys(syncErrors).length) {\n      result = setIn(result, 'syncErrors', syncErrors);\n    } else {\n      result = deleteIn(result, 'syncErrors');\n    }\n\n    return result;\n  }, _behaviors[UPDATE_SYNC_WARNINGS] = function (state, _ref29) {\n    var _ref29$payload = _ref29.payload,\n        syncWarnings = _ref29$payload.syncWarnings,\n        warning = _ref29$payload.warning;\n    var result = state;\n\n    if (warning) {\n      result = setIn(result, 'warning', warning);\n    } else {\n      result = deleteIn(result, 'warning');\n    }\n\n    if (Object.keys(syncWarnings).length) {\n      result = setIn(result, 'syncWarnings', syncWarnings);\n    } else {\n      result = deleteIn(result, 'syncWarnings');\n    }\n\n    return result;\n  }, _behaviors);\n\n  var reducer = function reducer(state, action) {\n    if (state === void 0) {\n      state = empty;\n    }\n\n    var behavior = behaviors[action.type];\n    return behavior ? behavior(state, action) : state;\n  };\n\n  var byForm = function byForm(reducer) {\n    return function (state, action) {\n      if (state === void 0) {\n        state = empty;\n      }\n\n      if (action === void 0) {\n        action = {\n          type: 'NONE'\n        };\n      }\n\n      var form = action && action.meta && action.meta.form;\n\n      if (!form || !isReduxFormAction(action)) {\n        return state;\n      }\n\n      if (action.type === DESTROY && action.meta && action.meta.form) {\n        return action.meta.form.reduce(function (result, form) {\n          return deleteInWithCleanUp(result, form);\n        }, state);\n      }\n\n      var formState = getIn(state, form);\n      var result = reducer(formState, action);\n      return result === formState ? state : setIn(state, form, result);\n    };\n  };\n  /**\n   * Adds additional functionality to the reducer\n   */\n\n\n  function decorate(target) {\n    target.plugin = function (reducers, config) {\n      var _this = this;\n\n      if (config === void 0) {\n        config = {};\n      } // use 'function' keyword to enable 'this'\n\n\n      return decorate(function (state, action) {\n        if (state === void 0) {\n          state = empty;\n        }\n\n        if (action === void 0) {\n          action = {\n            type: 'NONE'\n          };\n        }\n\n        var callPlugin = function callPlugin(processed, key) {\n          var previousState = getIn(processed, key);\n          var nextState = reducers[key](previousState, action, getIn(state, key));\n          return nextState !== previousState ? setIn(processed, key, nextState) : processed;\n        };\n\n        var processed = _this(state, action); // run through redux-form reducer\n\n\n        var form = action && action.meta && action.meta.form;\n\n        if (form && !config.receiveAllFormActions) {\n          // this is an action aimed at forms, so only give it to the specified form's plugin\n          return reducers[form] ? callPlugin(processed, form) : processed;\n        } else {\n          // this is not a form-specific action, so send it to all the plugins\n          return Object.keys(reducers).reduce(callPlugin, processed);\n        }\n      });\n    };\n\n    return target;\n  }\n\n  return decorate(byForm(reducer));\n}\n\nexport default createReducer;","map":{"version":3,"sources":["C:/Users/gethi/Desktop/React Apps/streams/client/node_modules/redux-form/es/createReducer.js"],"names":["_objectWithoutPropertiesLoose","_isFunction","ARRAY_INSERT","ARRAY_MOVE","ARRAY_POP","ARRAY_PUSH","ARRAY_REMOVE","ARRAY_REMOVE_ALL","ARRAY_SHIFT","ARRAY_SPLICE","ARRAY_SWAP","ARRAY_UNSHIFT","AUTOFILL","BLUR","CHANGE","CLEAR_ASYNC_ERROR","CLEAR_SUBMIT","CLEAR_SUBMIT_ERRORS","DESTROY","FOCUS","INITIALIZE","prefix","REGISTER_FIELD","RESET","RESET_SECTION","SET_SUBMIT_FAILED","SET_SUBMIT_SUCCEEDED","START_ASYNC_VALIDATION","START_SUBMIT","STOP_ASYNC_VALIDATION","STOP_SUBMIT","SUBMIT","TOUCH","UNREGISTER_FIELD","UNTOUCH","UPDATE_SYNC_ERRORS","CLEAR_FIELDS","UPDATE_SYNC_WARNINGS","createDeleteInWithCleanUp","plain","shouldDelete","_ref","getIn","state","path","initialValuesPath","test","replace","initialValueComparison","undefined","isReduxFormAction","action","type","length","substring","createReducer","structure","_behaviors","deepEqual","empty","forEach","setIn","deleteIn","fromJS","keys","size","some","splice","deleteInWithCleanUp","plainDeleteInWithCleanUp","doSplice","key","field","index","removeNum","value","force","existing","doPlainSplice","slice","rootKeys","arraySplice","result","nonValuesValue","behaviors","_ref2","_ref2$meta","meta","payload","_ref3","_ref3$meta","from","to","array","_ref4","_ref5","_ref6","_ref6$meta","_ref7","_ref8","_ref9","_ref9$meta","_ref10","_ref10$meta","indexA","indexB","valueA","valueB","_ref11","_ref12","_ref13","_ref13$meta","touch","initial","_ref14","_ref14$meta","persistentSubmitErrors","fieldCurrentValue","values","_ref15","_ref16","_ref16$meta","keepTouched","fields","anyTouched","_ref17","previouslyActive","_ref18","_ref18$meta","keepDirty","keepSubmitSucceeded","updateUnregisteredFields","keepValues","mapData","warning","syncWarnings","error","syncErrors","registeredFields","previousValues","previousInitialValues","newInitialValues","newValues","overwritePristineValue","name","previousInitialValue","previousValue","newInitialValue","_ref19","_ref19$payload","count","_ref20","sections","section","_ref21","_ref22","Object","_error","fieldErrors","_ref23","_ref24","_ref25","_ref26","_ref26$payload","destroyOnUnmount","_ref27","_ref28","_ref28$payload","_ref29","_ref29$payload","reducer","behavior","byForm","form","reduce","formState","decorate","target","plugin","reducers","config","_this","callPlugin","processed","previousState","nextState","receiveAllFormActions"],"mappings":"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","sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nimport _isFunction from \"lodash/isFunction\";\nimport { ARRAY_INSERT, ARRAY_MOVE, ARRAY_POP, ARRAY_PUSH, ARRAY_REMOVE, ARRAY_REMOVE_ALL, ARRAY_SHIFT, ARRAY_SPLICE, ARRAY_SWAP, ARRAY_UNSHIFT, AUTOFILL, BLUR, CHANGE, CLEAR_ASYNC_ERROR, CLEAR_SUBMIT, CLEAR_SUBMIT_ERRORS, DESTROY, FOCUS, INITIALIZE, prefix, REGISTER_FIELD, RESET, RESET_SECTION, SET_SUBMIT_FAILED, SET_SUBMIT_SUCCEEDED, START_ASYNC_VALIDATION, START_SUBMIT, STOP_ASYNC_VALIDATION, STOP_SUBMIT, SUBMIT, TOUCH, UNREGISTER_FIELD, UNTOUCH, UPDATE_SYNC_ERRORS, CLEAR_FIELDS, UPDATE_SYNC_WARNINGS } from './actionTypes';\nimport createDeleteInWithCleanUp from './deleteInWithCleanUp';\nimport plain from './structure/plain';\n\nvar shouldDelete = function shouldDelete(_ref) {\n  var getIn = _ref.getIn;\n  return function (state, path) {\n    var initialValuesPath = null;\n\n    if (/^values/.test(path)) {\n      initialValuesPath = path.replace('values', 'initial');\n    }\n\n    var initialValueComparison = initialValuesPath ? getIn(state, initialValuesPath) === undefined : true;\n    return getIn(state, path) !== undefined && initialValueComparison;\n  };\n};\n\nvar isReduxFormAction = function isReduxFormAction(action) {\n  return action && action.type && action.type.length > prefix.length && action.type.substring(0, prefix.length) === prefix;\n};\n\nfunction createReducer(structure) {\n  var _behaviors;\n\n  var deepEqual = structure.deepEqual,\n      empty = structure.empty,\n      forEach = structure.forEach,\n      getIn = structure.getIn,\n      setIn = structure.setIn,\n      deleteIn = structure.deleteIn,\n      fromJS = structure.fromJS,\n      keys = structure.keys,\n      size = structure.size,\n      some = structure.some,\n      splice = structure.splice;\n  var deleteInWithCleanUp = createDeleteInWithCleanUp(structure)(shouldDelete);\n  var plainDeleteInWithCleanUp = createDeleteInWithCleanUp(plain)(shouldDelete);\n\n  var doSplice = function doSplice(state, key, field, index, removeNum, value, force) {\n    var existing = getIn(state, key + \".\" + field);\n    return existing || force ? setIn(state, key + \".\" + field, splice(existing, index, removeNum, value)) : state;\n  };\n\n  var doPlainSplice = function doPlainSplice(state, key, field, index, removeNum, value, force) {\n    var slice = getIn(state, key);\n    var existing = plain.getIn(slice, field);\n    return existing || force ? setIn(state, key, plain.setIn(slice, field, plain.splice(existing, index, removeNum, value))) : state;\n  };\n\n  var rootKeys = ['values', 'fields', 'submitErrors', 'asyncErrors'];\n\n  var arraySplice = function arraySplice(state, field, index, removeNum, value) {\n    var result = state;\n    var nonValuesValue = value != null ? empty : undefined;\n    result = doSplice(result, 'values', field, index, removeNum, value, true);\n    result = doSplice(result, 'fields', field, index, removeNum, nonValuesValue);\n    result = doPlainSplice(result, 'syncErrors', field, index, removeNum, undefined);\n    result = doPlainSplice(result, 'syncWarnings', field, index, removeNum, undefined);\n    result = doSplice(result, 'submitErrors', field, index, removeNum, undefined);\n    result = doSplice(result, 'asyncErrors', field, index, removeNum, undefined);\n    return result;\n  };\n\n  var behaviors = (_behaviors = {}, _behaviors[ARRAY_INSERT] = function (state, _ref2) {\n    var _ref2$meta = _ref2.meta,\n        field = _ref2$meta.field,\n        index = _ref2$meta.index,\n        payload = _ref2.payload;\n    return arraySplice(state, field, index, 0, payload);\n  }, _behaviors[ARRAY_MOVE] = function (state, _ref3) {\n    var _ref3$meta = _ref3.meta,\n        field = _ref3$meta.field,\n        from = _ref3$meta.from,\n        to = _ref3$meta.to;\n    var array = getIn(state, \"values.\" + field);\n    var length = array ? size(array) : 0;\n    var result = state;\n\n    if (length) {\n      rootKeys.forEach(function (key) {\n        var path = key + \".\" + field;\n\n        if (getIn(result, path)) {\n          var value = getIn(result, path + \"[\" + from + \"]\");\n          result = setIn(result, path, splice(getIn(result, path), from, 1)); // remove\n\n          result = setIn(result, path, splice(getIn(result, path), to, 0, value)); // insert\n        }\n      });\n    }\n\n    return result;\n  }, _behaviors[ARRAY_POP] = function (state, _ref4) {\n    var field = _ref4.meta.field;\n    var array = getIn(state, \"values.\" + field);\n    var length = array ? size(array) : 0;\n    return length ? arraySplice(state, field, length - 1, 1) : state;\n  }, _behaviors[ARRAY_PUSH] = function (state, _ref5) {\n    var field = _ref5.meta.field,\n        payload = _ref5.payload;\n    var array = getIn(state, \"values.\" + field);\n    var length = array ? size(array) : 0;\n    return arraySplice(state, field, length, 0, payload);\n  }, _behaviors[ARRAY_REMOVE] = function (state, _ref6) {\n    var _ref6$meta = _ref6.meta,\n        field = _ref6$meta.field,\n        index = _ref6$meta.index;\n    return arraySplice(state, field, index, 1);\n  }, _behaviors[ARRAY_REMOVE_ALL] = function (state, _ref7) {\n    var field = _ref7.meta.field;\n    var array = getIn(state, \"values.\" + field);\n    var length = array ? size(array) : 0;\n    return length ? arraySplice(state, field, 0, length) : state;\n  }, _behaviors[ARRAY_SHIFT] = function (state, _ref8) {\n    var field = _ref8.meta.field;\n    return arraySplice(state, field, 0, 1);\n  }, _behaviors[ARRAY_SPLICE] = function (state, _ref9) {\n    var _ref9$meta = _ref9.meta,\n        field = _ref9$meta.field,\n        index = _ref9$meta.index,\n        removeNum = _ref9$meta.removeNum,\n        payload = _ref9.payload;\n    return arraySplice(state, field, index, removeNum, payload);\n  }, _behaviors[ARRAY_SWAP] = function (state, _ref10) {\n    var _ref10$meta = _ref10.meta,\n        field = _ref10$meta.field,\n        indexA = _ref10$meta.indexA,\n        indexB = _ref10$meta.indexB;\n    var result = state;\n    rootKeys.forEach(function (key) {\n      var valueA = getIn(result, key + \".\" + field + \"[\" + indexA + \"]\");\n      var valueB = getIn(result, key + \".\" + field + \"[\" + indexB + \"]\");\n\n      if (valueA !== undefined || valueB !== undefined) {\n        result = setIn(result, key + \".\" + field + \"[\" + indexA + \"]\", valueB);\n        result = setIn(result, key + \".\" + field + \"[\" + indexB + \"]\", valueA);\n      }\n    });\n    return result;\n  }, _behaviors[ARRAY_UNSHIFT] = function (state, _ref11) {\n    var field = _ref11.meta.field,\n        payload = _ref11.payload;\n    return arraySplice(state, field, 0, 0, payload);\n  }, _behaviors[AUTOFILL] = function (state, _ref12) {\n    var field = _ref12.meta.field,\n        payload = _ref12.payload;\n    var result = state;\n    result = deleteInWithCleanUp(result, \"asyncErrors.\" + field);\n    result = deleteInWithCleanUp(result, \"submitErrors.\" + field);\n    result = setIn(result, \"fields.\" + field + \".autofilled\", true);\n    result = setIn(result, \"values.\" + field, payload);\n    return result;\n  }, _behaviors[BLUR] = function (state, _ref13) {\n    var _ref13$meta = _ref13.meta,\n        field = _ref13$meta.field,\n        touch = _ref13$meta.touch,\n        payload = _ref13.payload;\n    var result = state;\n    var initial = getIn(result, \"initial.\" + field);\n\n    if (initial === undefined && payload === '') {\n      result = deleteInWithCleanUp(result, \"values.\" + field);\n    } else if (payload !== undefined) {\n      result = setIn(result, \"values.\" + field, payload);\n    }\n\n    if (field === getIn(result, 'active')) {\n      result = deleteIn(result, 'active');\n    }\n\n    result = deleteIn(result, \"fields.\" + field + \".active\");\n\n    if (touch) {\n      result = setIn(result, \"fields.\" + field + \".touched\", true);\n      result = setIn(result, 'anyTouched', true);\n    }\n\n    return result;\n  }, _behaviors[CHANGE] = function (state, _ref14) {\n    var _ref14$meta = _ref14.meta,\n        field = _ref14$meta.field,\n        touch = _ref14$meta.touch,\n        persistentSubmitErrors = _ref14$meta.persistentSubmitErrors,\n        payload = _ref14.payload;\n    var result = state;\n    var initial = getIn(result, \"initial.\" + field);\n\n    if (initial === undefined && payload === '' || payload === undefined) {\n      result = deleteInWithCleanUp(result, \"values.\" + field);\n    } else if (_isFunction(payload)) {\n      var fieldCurrentValue = getIn(state, \"values.\" + field);\n      result = setIn(result, \"values.\" + field, payload(fieldCurrentValue, state.values));\n    } else {\n      result = setIn(result, \"values.\" + field, payload);\n    }\n\n    result = deleteInWithCleanUp(result, \"asyncErrors.\" + field);\n\n    if (!persistentSubmitErrors) {\n      result = deleteInWithCleanUp(result, \"submitErrors.\" + field);\n    }\n\n    result = deleteInWithCleanUp(result, \"fields.\" + field + \".autofilled\");\n\n    if (touch) {\n      result = setIn(result, \"fields.\" + field + \".touched\", true);\n      result = setIn(result, 'anyTouched', true);\n    }\n\n    return result;\n  }, _behaviors[CLEAR_SUBMIT] = function (state) {\n    return deleteIn(state, 'triggerSubmit');\n  }, _behaviors[CLEAR_SUBMIT_ERRORS] = function (state) {\n    var result = state;\n    result = deleteInWithCleanUp(result, 'submitErrors');\n    result = deleteIn(result, 'error');\n    return result;\n  }, _behaviors[CLEAR_ASYNC_ERROR] = function (state, _ref15) {\n    var field = _ref15.meta.field;\n    return deleteIn(state, \"asyncErrors.\" + field);\n  }, _behaviors[CLEAR_FIELDS] = function (state, _ref16) {\n    var _ref16$meta = _ref16.meta,\n        keepTouched = _ref16$meta.keepTouched,\n        persistentSubmitErrors = _ref16$meta.persistentSubmitErrors,\n        fields = _ref16$meta.fields;\n    var result = state;\n    fields.forEach(function (field) {\n      result = deleteInWithCleanUp(result, \"asyncErrors.\" + field);\n\n      if (!persistentSubmitErrors) {\n        result = deleteInWithCleanUp(result, \"submitErrors.\" + field);\n      }\n\n      result = deleteInWithCleanUp(result, \"fields.\" + field + \".autofilled\");\n\n      if (!keepTouched) {\n        result = deleteIn(result, \"fields.\" + field + \".touched\");\n      }\n\n      var values = getIn(state, \"initial.\" + field);\n      result = values ? setIn(result, \"values.\" + field, values) : deleteInWithCleanUp(result, \"values.\" + field);\n    });\n    var anyTouched = some(keys(getIn(result, 'registeredFields')), function (key) {\n      return getIn(result, \"fields.\" + key + \".touched\");\n    });\n    result = anyTouched ? setIn(result, 'anyTouched', true) : deleteIn(result, 'anyTouched');\n    return result;\n  }, _behaviors[FOCUS] = function (state, _ref17) {\n    var field = _ref17.meta.field;\n    var result = state;\n    var previouslyActive = getIn(state, 'active');\n    result = deleteIn(result, \"fields.\" + previouslyActive + \".active\");\n    result = setIn(result, \"fields.\" + field + \".visited\", true);\n    result = setIn(result, \"fields.\" + field + \".active\", true);\n    result = setIn(result, 'active', field);\n    return result;\n  }, _behaviors[INITIALIZE] = function (state, _ref18) {\n    var payload = _ref18.payload,\n        _ref18$meta = _ref18.meta,\n        keepDirty = _ref18$meta.keepDirty,\n        keepSubmitSucceeded = _ref18$meta.keepSubmitSucceeded,\n        updateUnregisteredFields = _ref18$meta.updateUnregisteredFields,\n        keepValues = _ref18$meta.keepValues;\n    var mapData = fromJS(payload);\n    var result = empty; // clean all field state\n    // persist old warnings, they will get recalculated if the new form values are different from the old values\n\n    var warning = getIn(state, 'warning');\n\n    if (warning) {\n      result = setIn(result, 'warning', warning);\n    }\n\n    var syncWarnings = getIn(state, 'syncWarnings');\n\n    if (syncWarnings) {\n      result = setIn(result, 'syncWarnings', syncWarnings);\n    } // persist old errors, they will get recalculated if the new form values are different from the old values\n\n\n    var error = getIn(state, 'error');\n\n    if (error) {\n      result = setIn(result, 'error', error);\n    }\n\n    var syncErrors = getIn(state, 'syncErrors');\n\n    if (syncErrors) {\n      result = setIn(result, 'syncErrors', syncErrors);\n    }\n\n    var registeredFields = getIn(state, 'registeredFields');\n\n    if (registeredFields) {\n      result = setIn(result, 'registeredFields', registeredFields);\n    }\n\n    var previousValues = getIn(state, 'values');\n    var previousInitialValues = getIn(state, 'initial');\n    var newInitialValues = mapData;\n    var newValues = previousValues;\n\n    if (keepDirty && registeredFields) {\n      if (!deepEqual(newInitialValues, previousInitialValues)) {\n        //\n        // Keep the value of dirty fields while updating the value of\n        // pristine fields. This way, apps can reinitialize forms while\n        // avoiding stomping on user edits.\n        //\n        // Note 1: The initialize action replaces all initial values\n        // regardless of keepDirty.\n        //\n        // Note 2: When a field is dirty, keepDirty is enabled, and the field\n        // value is the same as the new initial value for the field, the\n        // initialize action causes the field to become pristine. That effect\n        // is what we want.\n        //\n        var overwritePristineValue = function overwritePristineValue(name) {\n          var previousInitialValue = getIn(previousInitialValues, name);\n          var previousValue = getIn(previousValues, name);\n\n          if (deepEqual(previousValue, previousInitialValue)) {\n            // Overwrite the old pristine value with the new pristine value\n            var newInitialValue = getIn(newInitialValues, name); // This check prevents any 'setIn' call that would create useless\n            // nested objects, since the path to the new field value would\n            // evaluate to the same (especially for undefined values)\n\n            if (getIn(newValues, name) !== newInitialValue) {\n              newValues = setIn(newValues, name, newInitialValue);\n            }\n          }\n        };\n\n        if (!updateUnregisteredFields) {\n          forEach(keys(registeredFields), function (name) {\n            return overwritePristineValue(name);\n          });\n        }\n\n        forEach(keys(newInitialValues), function (name) {\n          var previousInitialValue = getIn(previousInitialValues, name);\n\n          if (typeof previousInitialValue === 'undefined') {\n            // Add new values at the root level.\n            var newInitialValue = getIn(newInitialValues, name);\n            newValues = setIn(newValues, name, newInitialValue);\n          }\n\n          if (updateUnregisteredFields) {\n            overwritePristineValue(name);\n          }\n        });\n      }\n    } else {\n      newValues = newInitialValues;\n    }\n\n    if (keepValues) {\n      forEach(keys(previousValues), function (name) {\n        var previousValue = getIn(previousValues, name);\n        newValues = setIn(newValues, name, previousValue);\n      });\n      forEach(keys(previousInitialValues), function (name) {\n        var previousInitialValue = getIn(previousInitialValues, name);\n        newInitialValues = setIn(newInitialValues, name, previousInitialValue);\n      });\n    }\n\n    if (keepSubmitSucceeded && getIn(state, 'submitSucceeded')) {\n      result = setIn(result, 'submitSucceeded', true);\n    }\n\n    result = setIn(result, 'values', newValues);\n    result = setIn(result, 'initial', newInitialValues);\n    return result;\n  }, _behaviors[REGISTER_FIELD] = function (state, _ref19) {\n    var _ref19$payload = _ref19.payload,\n        name = _ref19$payload.name,\n        type = _ref19$payload.type;\n    var key = \"registeredFields['\" + name + \"']\";\n    var field = getIn(state, key);\n\n    if (field) {\n      var count = getIn(field, 'count') + 1;\n      field = setIn(field, 'count', count);\n    } else {\n      field = fromJS({\n        name: name,\n        type: type,\n        count: 1\n      });\n    }\n\n    return setIn(state, key, field);\n  }, _behaviors[RESET] = function (state) {\n    var result = empty;\n    var registeredFields = getIn(state, 'registeredFields');\n\n    if (registeredFields) {\n      result = setIn(result, 'registeredFields', registeredFields);\n    }\n\n    var values = getIn(state, 'initial');\n\n    if (values) {\n      result = setIn(result, 'values', values);\n      result = setIn(result, 'initial', values);\n    }\n\n    return result;\n  }, _behaviors[RESET_SECTION] = function (state, _ref20) {\n    var sections = _ref20.meta.sections;\n    var result = state;\n    sections.forEach(function (section) {\n      result = deleteInWithCleanUp(result, \"asyncErrors.\" + section);\n      result = deleteInWithCleanUp(result, \"submitErrors.\" + section);\n      result = deleteInWithCleanUp(result, \"fields.\" + section);\n      var values = getIn(state, \"initial.\" + section);\n      result = values ? setIn(result, \"values.\" + section, values) : deleteInWithCleanUp(result, \"values.\" + section);\n    });\n    var anyTouched = some(keys(getIn(result, 'registeredFields')), function (key) {\n      return getIn(result, \"fields.\" + key + \".touched\");\n    });\n    result = anyTouched ? setIn(result, 'anyTouched', true) : deleteIn(result, 'anyTouched');\n    return result;\n  }, _behaviors[SUBMIT] = function (state) {\n    return setIn(state, 'triggerSubmit', true);\n  }, _behaviors[START_ASYNC_VALIDATION] = function (state, _ref21) {\n    var field = _ref21.meta.field;\n    return setIn(state, 'asyncValidating', field || true);\n  }, _behaviors[START_SUBMIT] = function (state) {\n    return setIn(state, 'submitting', true);\n  }, _behaviors[STOP_ASYNC_VALIDATION] = function (state, _ref22) {\n    var payload = _ref22.payload;\n    var result = state;\n    result = deleteIn(result, 'asyncValidating');\n\n    if (payload && Object.keys(payload).length) {\n      var _error = payload._error,\n          fieldErrors = _objectWithoutPropertiesLoose(payload, [\"_error\"]);\n\n      if (_error) {\n        result = setIn(result, 'error', _error);\n      }\n\n      if (Object.keys(fieldErrors).length) {\n        result = setIn(result, 'asyncErrors', fromJS(fieldErrors));\n      }\n    } else {\n      result = deleteIn(result, 'error');\n      result = deleteIn(result, 'asyncErrors');\n    }\n\n    return result;\n  }, _behaviors[STOP_SUBMIT] = function (state, _ref23) {\n    var payload = _ref23.payload;\n    var result = state;\n    result = deleteIn(result, 'submitting');\n    result = deleteIn(result, 'submitFailed');\n    result = deleteIn(result, 'submitSucceeded');\n\n    if (payload && Object.keys(payload).length) {\n      var _error = payload._error,\n          fieldErrors = _objectWithoutPropertiesLoose(payload, [\"_error\"]);\n\n      if (_error) {\n        result = setIn(result, 'error', _error);\n      } else {\n        result = deleteIn(result, 'error');\n      }\n\n      if (Object.keys(fieldErrors).length) {\n        result = setIn(result, 'submitErrors', fromJS(fieldErrors));\n      } else {\n        result = deleteIn(result, 'submitErrors');\n      }\n\n      result = setIn(result, 'submitFailed', true);\n    } else {\n      result = deleteIn(result, 'error');\n      result = deleteIn(result, 'submitErrors');\n    }\n\n    return result;\n  }, _behaviors[SET_SUBMIT_FAILED] = function (state, _ref24) {\n    var fields = _ref24.meta.fields;\n    var result = state;\n    result = setIn(result, 'submitFailed', true);\n    result = deleteIn(result, 'submitSucceeded');\n    result = deleteIn(result, 'submitting');\n    fields.forEach(function (field) {\n      return result = setIn(result, \"fields.\" + field + \".touched\", true);\n    });\n\n    if (fields.length) {\n      result = setIn(result, 'anyTouched', true);\n    }\n\n    return result;\n  }, _behaviors[SET_SUBMIT_SUCCEEDED] = function (state) {\n    var result = state;\n    result = deleteIn(result, 'submitFailed');\n    result = setIn(result, 'submitSucceeded', true);\n    return result;\n  }, _behaviors[TOUCH] = function (state, _ref25) {\n    var fields = _ref25.meta.fields;\n    var result = state;\n    fields.forEach(function (field) {\n      return result = setIn(result, \"fields.\" + field + \".touched\", true);\n    });\n    result = setIn(result, 'anyTouched', true);\n    return result;\n  }, _behaviors[UNREGISTER_FIELD] = function (state, _ref26) {\n    var _ref26$payload = _ref26.payload,\n        name = _ref26$payload.name,\n        destroyOnUnmount = _ref26$payload.destroyOnUnmount;\n    var result = state;\n    var key = \"registeredFields['\" + name + \"']\";\n    var field = getIn(result, key);\n\n    if (!field) {\n      return result;\n    }\n\n    var count = getIn(field, 'count') - 1;\n\n    if (count <= 0 && destroyOnUnmount) {\n      // Note: Cannot use deleteWithCleanUp here because of the flat nature of registeredFields\n      result = deleteIn(result, key);\n\n      if (deepEqual(getIn(result, 'registeredFields'), empty)) {\n        result = deleteIn(result, 'registeredFields');\n      }\n\n      var syncErrors = getIn(result, 'syncErrors');\n\n      if (syncErrors) {\n        syncErrors = plainDeleteInWithCleanUp(syncErrors, name);\n\n        if (plain.deepEqual(syncErrors, plain.empty)) {\n          result = deleteIn(result, 'syncErrors');\n        } else {\n          result = setIn(result, 'syncErrors', syncErrors);\n        }\n      }\n\n      var syncWarnings = getIn(result, 'syncWarnings');\n\n      if (syncWarnings) {\n        syncWarnings = plainDeleteInWithCleanUp(syncWarnings, name);\n\n        if (plain.deepEqual(syncWarnings, plain.empty)) {\n          result = deleteIn(result, 'syncWarnings');\n        } else {\n          result = setIn(result, 'syncWarnings', syncWarnings);\n        }\n      }\n\n      result = deleteInWithCleanUp(result, \"submitErrors.\" + name);\n      result = deleteInWithCleanUp(result, \"asyncErrors.\" + name);\n    } else {\n      field = setIn(field, 'count', count);\n      result = setIn(result, key, field);\n    }\n\n    return result;\n  }, _behaviors[UNTOUCH] = function (state, _ref27) {\n    var fields = _ref27.meta.fields;\n    var result = state;\n    fields.forEach(function (field) {\n      return result = deleteIn(result, \"fields.\" + field + \".touched\");\n    });\n    var anyTouched = some(keys(getIn(result, 'registeredFields')), function (key) {\n      return getIn(result, \"fields.\" + key + \".touched\");\n    });\n    result = anyTouched ? setIn(result, 'anyTouched', true) : deleteIn(result, 'anyTouched');\n    return result;\n  }, _behaviors[UPDATE_SYNC_ERRORS] = function (state, _ref28) {\n    var _ref28$payload = _ref28.payload,\n        syncErrors = _ref28$payload.syncErrors,\n        error = _ref28$payload.error;\n    var result = state;\n\n    if (error) {\n      result = setIn(result, 'error', error);\n      result = setIn(result, 'syncError', true);\n    } else {\n      result = deleteIn(result, 'error');\n      result = deleteIn(result, 'syncError');\n    }\n\n    if (Object.keys(syncErrors).length) {\n      result = setIn(result, 'syncErrors', syncErrors);\n    } else {\n      result = deleteIn(result, 'syncErrors');\n    }\n\n    return result;\n  }, _behaviors[UPDATE_SYNC_WARNINGS] = function (state, _ref29) {\n    var _ref29$payload = _ref29.payload,\n        syncWarnings = _ref29$payload.syncWarnings,\n        warning = _ref29$payload.warning;\n    var result = state;\n\n    if (warning) {\n      result = setIn(result, 'warning', warning);\n    } else {\n      result = deleteIn(result, 'warning');\n    }\n\n    if (Object.keys(syncWarnings).length) {\n      result = setIn(result, 'syncWarnings', syncWarnings);\n    } else {\n      result = deleteIn(result, 'syncWarnings');\n    }\n\n    return result;\n  }, _behaviors);\n\n  var reducer = function reducer(state, action) {\n    if (state === void 0) {\n      state = empty;\n    }\n\n    var behavior = behaviors[action.type];\n    return behavior ? behavior(state, action) : state;\n  };\n\n  var byForm = function byForm(reducer) {\n    return function (state, action) {\n      if (state === void 0) {\n        state = empty;\n      }\n\n      if (action === void 0) {\n        action = {\n          type: 'NONE'\n        };\n      }\n\n      var form = action && action.meta && action.meta.form;\n\n      if (!form || !isReduxFormAction(action)) {\n        return state;\n      }\n\n      if (action.type === DESTROY && action.meta && action.meta.form) {\n        return action.meta.form.reduce(function (result, form) {\n          return deleteInWithCleanUp(result, form);\n        }, state);\n      }\n\n      var formState = getIn(state, form);\n      var result = reducer(formState, action);\n      return result === formState ? state : setIn(state, form, result);\n    };\n  };\n  /**\n   * Adds additional functionality to the reducer\n   */\n\n\n  function decorate(target) {\n    target.plugin = function (reducers, config) {\n      var _this = this;\n\n      if (config === void 0) {\n        config = {};\n      }\n\n      // use 'function' keyword to enable 'this'\n      return decorate(function (state, action) {\n        if (state === void 0) {\n          state = empty;\n        }\n\n        if (action === void 0) {\n          action = {\n            type: 'NONE'\n          };\n        }\n\n        var callPlugin = function callPlugin(processed, key) {\n          var previousState = getIn(processed, key);\n          var nextState = reducers[key](previousState, action, getIn(state, key));\n          return nextState !== previousState ? setIn(processed, key, nextState) : processed;\n        };\n\n        var processed = _this(state, action); // run through redux-form reducer\n\n\n        var form = action && action.meta && action.meta.form;\n\n        if (form && !config.receiveAllFormActions) {\n          // this is an action aimed at forms, so only give it to the specified form's plugin\n          return reducers[form] ? callPlugin(processed, form) : processed;\n        } else {\n          // this is not a form-specific action, so send it to all the plugins\n          return Object.keys(reducers).reduce(callPlugin, processed);\n        }\n      });\n    };\n\n    return target;\n  }\n\n  return decorate(byForm(reducer));\n}\n\nexport default createReducer;"]},"metadata":{},"sourceType":"module"}