{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gethi\\\\Desktop\\\\React Apps\\\\streams\\\\client\\\\src\\\\components\\\\streams\\\\StreamCreate.js\";\nimport React from \"react\";\nimport { Field, reduxForm } from \"redux-form\";\n\nclass StreamCreate extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.renderError = ({\n      error,\n      touched\n    }) => {\n      if (touched && error) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"ui error message\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 8,\n            columnNumber: 5\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"header\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 9,\n            columnNumber: 6\n          }\n        }, error));\n      }\n    };\n\n    this.renderInput = ({\n      input,\n      label,\n      meta\n    }) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"field error\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 4\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 5\n        }\n      }, label), /*#__PURE__*/React.createElement(\"input\", Object.assign({}, input, {\n        autoComplete: \"off\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 5\n        }\n      })), this.renderError(meta));\n    };\n  }\n\n  onSubmit(formValues) {}\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.props.handleSubmit(this.onSubmit),\n      className: \"ui form error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      name: \"title\",\n      component: this.renderInput,\n      label: \"Enter Title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(Field, {\n      name: \"description\",\n      component: this.renderInput,\n      label: \"Enter Description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"ui button primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 5\n      }\n    }, \"Submit\"));\n  }\n\n}\n\nconst validate = formValues => {\n  const errors = {};\n\n  if (!formValues.title) {\n    errors.title = \"You must enter a title\";\n  }\n\n  if (!formValues.description) {\n    errors.description = \"You must enter a description\";\n  }\n\n  return errors;\n};\n\nexport default reduxForm({\n  form: \"streamCreate\",\n  validate\n})(StreamCreate);","map":{"version":3,"sources":["C:/Users/gethi/Desktop/React Apps/streams/client/src/components/streams/StreamCreate.js"],"names":["React","Field","reduxForm","StreamCreate","Component","renderError","error","touched","renderInput","input","label","meta","onSubmit","formValues","render","props","handleSubmit","validate","errors","title","description","form"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,YAAjC;;AAEA,MAAMC,YAAN,SAA2BH,KAAK,CAACI,SAAjC,CAA2C;AAAA;AAAA;;AAAA,SAC1CC,WAD0C,GAC5B,CAAC;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,KAAD,KAAwB;AACrC,UAAIA,OAAO,IAAID,KAAf,EAAsB;AACrB,4BACC;AAAK,UAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACC;AAAK,UAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAyBA,KAAzB,CADD,CADD;AAKA;AACD,KATyC;;AAAA,SAU1CE,WAV0C,GAU5B,CAAC;AAAEC,MAAAA,KAAF;AAASC,MAAAA,KAAT;AAAgBC,MAAAA;AAAhB,KAAD,KAA4B;AACzC,0BACC;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAQD,KAAR,CADD,eAEC,+CAAWD,KAAX;AAAkB,QAAA,YAAY,EAAC,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFD,EAGE,KAAKJ,WAAL,CAAiBM,IAAjB,CAHF,CADD;AAOA,KAlByC;AAAA;;AAmB1CC,EAAAA,QAAQ,CAACC,UAAD,EAAa,CAAE;;AACvBC,EAAAA,MAAM,GAAG;AACR,wBACC;AAAM,MAAA,QAAQ,EAAE,KAAKC,KAAL,CAAWC,YAAX,CAAwB,KAAKJ,QAA7B,CAAhB;AAAwD,MAAA,SAAS,EAAC,eAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,SAAS,EAAE,KAAKJ,WAApC;AAAiD,MAAA,KAAK,EAAC,aAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,eAEC,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,aAAZ;AAA0B,MAAA,SAAS,EAAE,KAAKA,WAA1C;AAAuD,MAAA,KAAK,EAAC,mBAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFD,eAGC;AAAQ,MAAA,SAAS,EAAC,mBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHD,CADD;AAOA;;AA5ByC;;AA+B3C,MAAMS,QAAQ,GAAIJ,UAAD,IAAgB;AAChC,QAAMK,MAAM,GAAG,EAAf;;AACA,MAAI,CAACL,UAAU,CAACM,KAAhB,EAAuB;AACtBD,IAAAA,MAAM,CAACC,KAAP,GAAe,wBAAf;AACA;;AACD,MAAI,CAACN,UAAU,CAACO,WAAhB,EAA6B;AAC5BF,IAAAA,MAAM,CAACE,WAAP,GAAqB,8BAArB;AACA;;AACD,SAAOF,MAAP;AACA,CATD;;AAWA,eAAehB,SAAS,CAAC;AACxBmB,EAAAA,IAAI,EAAE,cADkB;AAExBJ,EAAAA;AAFwB,CAAD,CAAT,CAGZd,YAHY,CAAf","sourcesContent":["import React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\n\r\nclass StreamCreate extends React.Component {\r\n\trenderError = ({ error, touched }) => {\r\n\t\tif (touched && error) {\r\n\t\t\treturn (\r\n\t\t\t\t<div className=\"ui error message\">\r\n\t\t\t\t\t<div className=\"header\">{error}</div>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\t};\r\n\trenderInput = ({ input, label, meta }) => {\r\n\t\treturn (\r\n\t\t\t<div className=\"field error\">\r\n\t\t\t\t<label>{label}</label>\r\n\t\t\t\t<input {...input} autoComplete=\"off\" />\r\n\t\t\t\t{this.renderError(meta)}\r\n\t\t\t</div>\r\n\t\t);\r\n\t};\r\n\tonSubmit(formValues) {}\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<form onSubmit={this.props.handleSubmit(this.onSubmit)} className=\"ui form error\">\r\n\t\t\t\t<Field name=\"title\" component={this.renderInput} label=\"Enter Title\" />\r\n\t\t\t\t<Field name=\"description\" component={this.renderInput} label=\"Enter Description\" />\r\n\t\t\t\t<button className=\"ui button primary\">Submit</button>\r\n\t\t\t</form>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst validate = (formValues) => {\r\n\tconst errors = {};\r\n\tif (!formValues.title) {\r\n\t\terrors.title = \"You must enter a title\";\r\n\t}\r\n\tif (!formValues.description) {\r\n\t\terrors.description = \"You must enter a description\";\r\n\t}\r\n\treturn errors;\r\n};\r\n\r\nexport default reduxForm({\r\n\tform: \"streamCreate\",\r\n\tvalidate\r\n})(StreamCreate);\r\n"]},"metadata":{},"sourceType":"module"}