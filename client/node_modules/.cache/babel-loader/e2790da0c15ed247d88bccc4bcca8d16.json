{"ast":null,"code":"/*\n * Copyright (C) 2016 Bilibili. All Rights Reserved.\n *\n * @author zheng qian <xqq@xqq.im>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport Log from '../utils/logger.js';\nimport { BaseLoader, LoaderStatus, LoaderErrors } from './loader.js';\nimport { RuntimeException } from '../utils/exception.js'; // For FireFox browser which supports `xhr.responseType = 'moz-chunked-arraybuffer'`\n\nclass MozChunkedLoader extends BaseLoader {\n  static isSupported() {\n    try {\n      let xhr = new XMLHttpRequest(); // Firefox 37- requires .open() to be called before setting responseType\n\n      xhr.open('GET', 'https://example.com', true);\n      xhr.responseType = 'moz-chunked-arraybuffer';\n      return xhr.responseType === 'moz-chunked-arraybuffer';\n    } catch (e) {\n      Log.w('MozChunkedLoader', e.message);\n      return false;\n    }\n  }\n\n  constructor(seekHandler, config) {\n    super('xhr-moz-chunked-loader');\n    this.TAG = 'MozChunkedLoader';\n    this._seekHandler = seekHandler;\n    this._config = config;\n    this._needStash = true;\n    this._xhr = null;\n    this._requestAbort = false;\n    this._contentLength = null;\n    this._receivedLength = 0;\n  }\n\n  destroy() {\n    if (this.isWorking()) {\n      this.abort();\n    }\n\n    if (this._xhr) {\n      this._xhr.onreadystatechange = null;\n      this._xhr.onprogress = null;\n      this._xhr.onloadend = null;\n      this._xhr.onerror = null;\n      this._xhr = null;\n    }\n\n    super.destroy();\n  }\n\n  open(dataSource, range) {\n    this._dataSource = dataSource;\n    this._range = range;\n    let sourceURL = dataSource.url;\n\n    if (this._config.reuseRedirectedURL && dataSource.redirectedURL != undefined) {\n      sourceURL = dataSource.redirectedURL;\n    }\n\n    let seekConfig = this._seekHandler.getConfig(sourceURL, range);\n\n    this._requestURL = seekConfig.url;\n    let xhr = this._xhr = new XMLHttpRequest();\n    xhr.open('GET', seekConfig.url, true);\n    xhr.responseType = 'moz-chunked-arraybuffer';\n    xhr.onreadystatechange = this._onReadyStateChange.bind(this);\n    xhr.onprogress = this._onProgress.bind(this);\n    xhr.onloadend = this._onLoadEnd.bind(this);\n    xhr.onerror = this._onXhrError.bind(this); // cors is auto detected and enabled by xhr\n    // withCredentials is disabled by default\n\n    if (dataSource.withCredentials) {\n      xhr.withCredentials = true;\n    }\n\n    if (typeof seekConfig.headers === 'object') {\n      let headers = seekConfig.headers;\n\n      for (let key in headers) {\n        if (headers.hasOwnProperty(key)) {\n          xhr.setRequestHeader(key, headers[key]);\n        }\n      }\n    } // add additional headers\n\n\n    if (typeof this._config.headers === 'object') {\n      let headers = this._config.headers;\n\n      for (let key in headers) {\n        if (headers.hasOwnProperty(key)) {\n          xhr.setRequestHeader(key, headers[key]);\n        }\n      }\n    }\n\n    this._status = LoaderStatus.kConnecting;\n    xhr.send();\n  }\n\n  abort() {\n    this._requestAbort = true;\n\n    if (this._xhr) {\n      this._xhr.abort();\n    }\n\n    this._status = LoaderStatus.kComplete;\n  }\n\n  _onReadyStateChange(e) {\n    let xhr = e.target;\n\n    if (xhr.readyState === 2) {\n      // HEADERS_RECEIVED\n      if (xhr.responseURL != undefined && xhr.responseURL !== this._requestURL) {\n        if (this._onURLRedirect) {\n          let redirectedURL = this._seekHandler.removeURLParameters(xhr.responseURL);\n\n          this._onURLRedirect(redirectedURL);\n        }\n      }\n\n      if (xhr.status !== 0 && (xhr.status < 200 || xhr.status > 299)) {\n        this._status = LoaderStatus.kError;\n\n        if (this._onError) {\n          this._onError(LoaderErrors.HTTP_STATUS_CODE_INVALID, {\n            code: xhr.status,\n            msg: xhr.statusText\n          });\n        } else {\n          throw new RuntimeException('MozChunkedLoader: Http code invalid, ' + xhr.status + ' ' + xhr.statusText);\n        }\n      } else {\n        this._status = LoaderStatus.kBuffering;\n      }\n    }\n  }\n\n  _onProgress(e) {\n    if (this._status === LoaderStatus.kError) {\n      // Ignore error response\n      return;\n    }\n\n    if (this._contentLength === null) {\n      if (e.total !== null && e.total !== 0) {\n        this._contentLength = e.total;\n\n        if (this._onContentLengthKnown) {\n          this._onContentLengthKnown(this._contentLength);\n        }\n      }\n    }\n\n    let chunk = e.target.response;\n    let byteStart = this._range.from + this._receivedLength;\n    this._receivedLength += chunk.byteLength;\n\n    if (this._onDataArrival) {\n      this._onDataArrival(chunk, byteStart, this._receivedLength);\n    }\n  }\n\n  _onLoadEnd(e) {\n    if (this._requestAbort === true) {\n      this._requestAbort = false;\n      return;\n    } else if (this._status === LoaderStatus.kError) {\n      return;\n    }\n\n    this._status = LoaderStatus.kComplete;\n\n    if (this._onComplete) {\n      this._onComplete(this._range.from, this._range.from + this._receivedLength - 1);\n    }\n  }\n\n  _onXhrError(e) {\n    this._status = LoaderStatus.kError;\n    let type = 0;\n    let info = null;\n\n    if (this._contentLength && e.loaded < this._contentLength) {\n      type = LoaderErrors.EARLY_EOF;\n      info = {\n        code: -1,\n        msg: 'Moz-Chunked stream meet Early-Eof'\n      };\n    } else {\n      type = LoaderErrors.EXCEPTION;\n      info = {\n        code: -1,\n        msg: e.constructor.name + ' ' + e.type\n      };\n    }\n\n    if (this._onError) {\n      this._onError(type, info);\n    } else {\n      throw new RuntimeException(info.msg);\n    }\n  }\n\n}\n\nexport default MozChunkedLoader;","map":{"version":3,"sources":["C:/Users/gethi/Desktop/React Apps/streams/client/node_modules/flv.js/src/io/xhr-moz-chunked-loader.js"],"names":["Log","BaseLoader","LoaderStatus","LoaderErrors","RuntimeException","MozChunkedLoader","isSupported","xhr","XMLHttpRequest","open","responseType","e","w","message","constructor","seekHandler","config","TAG","_seekHandler","_config","_needStash","_xhr","_requestAbort","_contentLength","_receivedLength","destroy","isWorking","abort","onreadystatechange","onprogress","onloadend","onerror","dataSource","range","_dataSource","_range","sourceURL","url","reuseRedirectedURL","redirectedURL","undefined","seekConfig","getConfig","_requestURL","_onReadyStateChange","bind","_onProgress","_onLoadEnd","_onXhrError","withCredentials","headers","key","hasOwnProperty","setRequestHeader","_status","kConnecting","send","kComplete","target","readyState","responseURL","_onURLRedirect","removeURLParameters","status","kError","_onError","HTTP_STATUS_CODE_INVALID","code","msg","statusText","kBuffering","total","_onContentLengthKnown","chunk","response","byteStart","from","byteLength","_onDataArrival","_onComplete","type","info","loaded","EARLY_EOF","EXCEPTION","name"],"mappings":"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","sourcesContent":["/*\n * Copyright (C) 2016 Bilibili. All Rights Reserved.\n *\n * @author zheng qian <xqq@xqq.im>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Log from '../utils/logger.js';\nimport {BaseLoader, LoaderStatus, LoaderErrors} from './loader.js';\nimport {RuntimeException} from '../utils/exception.js';\n\n// For FireFox browser which supports `xhr.responseType = 'moz-chunked-arraybuffer'`\nclass MozChunkedLoader extends BaseLoader {\n\n    static isSupported() {\n        try {\n            let xhr = new XMLHttpRequest();\n            // Firefox 37- requires .open() to be called before setting responseType\n            xhr.open('GET', 'https://example.com', true);\n            xhr.responseType = 'moz-chunked-arraybuffer';\n            return (xhr.responseType === 'moz-chunked-arraybuffer');\n        } catch (e) {\n            Log.w('MozChunkedLoader', e.message);\n            return false;\n        }\n    }\n\n    constructor(seekHandler, config) {\n        super('xhr-moz-chunked-loader');\n        this.TAG = 'MozChunkedLoader';\n\n        this._seekHandler = seekHandler;\n        this._config = config;\n        this._needStash = true;\n\n        this._xhr = null;\n        this._requestAbort = false;\n        this._contentLength = null;\n        this._receivedLength = 0;\n    }\n\n    destroy() {\n        if (this.isWorking()) {\n            this.abort();\n        }\n        if (this._xhr) {\n            this._xhr.onreadystatechange = null;\n            this._xhr.onprogress = null;\n            this._xhr.onloadend = null;\n            this._xhr.onerror = null;\n            this._xhr = null;\n        }\n        super.destroy();\n    }\n\n    open(dataSource, range) {\n        this._dataSource = dataSource;\n        this._range = range;\n\n        let sourceURL = dataSource.url;\n        if (this._config.reuseRedirectedURL && dataSource.redirectedURL != undefined) {\n            sourceURL = dataSource.redirectedURL;\n        }\n\n        let seekConfig = this._seekHandler.getConfig(sourceURL, range);\n        this._requestURL = seekConfig.url;\n\n        let xhr = this._xhr = new XMLHttpRequest();\n        xhr.open('GET', seekConfig.url, true);\n        xhr.responseType = 'moz-chunked-arraybuffer';\n        xhr.onreadystatechange = this._onReadyStateChange.bind(this);\n        xhr.onprogress = this._onProgress.bind(this);\n        xhr.onloadend = this._onLoadEnd.bind(this);\n        xhr.onerror = this._onXhrError.bind(this);\n\n        // cors is auto detected and enabled by xhr\n\n        // withCredentials is disabled by default\n        if (dataSource.withCredentials) {\n            xhr.withCredentials = true;\n        }\n\n        if (typeof seekConfig.headers === 'object') {\n            let headers = seekConfig.headers;\n\n            for (let key in headers) {\n                if (headers.hasOwnProperty(key)) {\n                    xhr.setRequestHeader(key, headers[key]);\n                }\n            }\n        }\n\n        // add additional headers\n        if (typeof this._config.headers === 'object') {\n            let headers = this._config.headers;\n\n            for (let key in headers) {\n                if (headers.hasOwnProperty(key)) {\n                    xhr.setRequestHeader(key, headers[key]);\n                }\n            }\n        }\n\n        this._status = LoaderStatus.kConnecting;\n        xhr.send();\n    }\n\n    abort() {\n        this._requestAbort = true;\n        if (this._xhr) {\n            this._xhr.abort();\n        }\n        this._status = LoaderStatus.kComplete;\n    }\n\n    _onReadyStateChange(e) {\n        let xhr = e.target;\n\n        if (xhr.readyState === 2) {  // HEADERS_RECEIVED\n            if (xhr.responseURL != undefined && xhr.responseURL !== this._requestURL) {\n                if (this._onURLRedirect) {\n                    let redirectedURL = this._seekHandler.removeURLParameters(xhr.responseURL);\n                    this._onURLRedirect(redirectedURL);\n                }\n            }\n\n            if (xhr.status !== 0 && (xhr.status < 200 || xhr.status > 299)) {\n                this._status = LoaderStatus.kError;\n                if (this._onError) {\n                    this._onError(LoaderErrors.HTTP_STATUS_CODE_INVALID, {code: xhr.status, msg: xhr.statusText});\n                } else {\n                    throw new RuntimeException('MozChunkedLoader: Http code invalid, ' + xhr.status + ' ' + xhr.statusText);\n                }\n            } else {\n                this._status = LoaderStatus.kBuffering;\n            }\n        }\n    }\n\n    _onProgress(e) {\n        if (this._status === LoaderStatus.kError) {\n            // Ignore error response\n            return;\n        }\n\n        if (this._contentLength === null) {\n            if (e.total !== null && e.total !== 0) {\n                this._contentLength = e.total;\n                if (this._onContentLengthKnown) {\n                    this._onContentLengthKnown(this._contentLength);\n                }\n            }\n        }\n\n        let chunk = e.target.response;\n        let byteStart = this._range.from + this._receivedLength;\n        this._receivedLength += chunk.byteLength;\n\n        if (this._onDataArrival) {\n            this._onDataArrival(chunk, byteStart, this._receivedLength);\n        }\n    }\n\n    _onLoadEnd(e) {\n        if (this._requestAbort === true) {\n            this._requestAbort = false;\n            return;\n        } else if (this._status === LoaderStatus.kError) {\n            return;\n        }\n\n        this._status = LoaderStatus.kComplete;\n        if (this._onComplete) {\n            this._onComplete(this._range.from, this._range.from + this._receivedLength - 1);\n        }\n    }\n\n    _onXhrError(e) {\n        this._status = LoaderStatus.kError;\n        let type = 0;\n        let info = null;\n\n        if (this._contentLength && e.loaded < this._contentLength) {\n            type = LoaderErrors.EARLY_EOF;\n            info = {code: -1, msg: 'Moz-Chunked stream meet Early-Eof'};\n        } else {\n            type = LoaderErrors.EXCEPTION;\n            info = {code: -1, msg: e.constructor.name + ' ' + e.type};\n        }\n\n        if (this._onError) {\n            this._onError(type, info);\n        } else {\n            throw new RuntimeException(info.msg);\n        }\n    }\n\n}\n\nexport default MozChunkedLoader;"]},"metadata":{},"sourceType":"module"}