{"ast":null,"code":"/*\n * Copyright (C) 2016 Bilibili. All Rights Reserved.\n *\n * @author zheng qian <xqq@xqq.im>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { NotImplementedException } from '../utils/exception.js';\nexport const LoaderStatus = {\n  kIdle: 0,\n  kConnecting: 1,\n  kBuffering: 2,\n  kError: 3,\n  kComplete: 4\n};\nexport const LoaderErrors = {\n  OK: 'OK',\n  EXCEPTION: 'Exception',\n  HTTP_STATUS_CODE_INVALID: 'HttpStatusCodeInvalid',\n  CONNECTING_TIMEOUT: 'ConnectingTimeout',\n  EARLY_EOF: 'EarlyEof',\n  UNRECOVERABLE_EARLY_EOF: 'UnrecoverableEarlyEof'\n};\n/* Loader has callbacks which have following prototypes:\n *     function onContentLengthKnown(contentLength: number): void\n *     function onURLRedirect(url: string): void\n *     function onDataArrival(chunk: ArrayBuffer, byteStart: number, receivedLength: number): void\n *     function onError(errorType: number, errorInfo: {code: number, msg: string}): void\n *     function onComplete(rangeFrom: number, rangeTo: number): void\n */\n\nexport class BaseLoader {\n  constructor(typeName) {\n    this._type = typeName || 'undefined';\n    this._status = LoaderStatus.kIdle;\n    this._needStash = false; // callbacks\n\n    this._onContentLengthKnown = null;\n    this._onURLRedirect = null;\n    this._onDataArrival = null;\n    this._onError = null;\n    this._onComplete = null;\n  }\n\n  destroy() {\n    this._status = LoaderStatus.kIdle;\n    this._onContentLengthKnown = null;\n    this._onURLRedirect = null;\n    this._onDataArrival = null;\n    this._onError = null;\n    this._onComplete = null;\n  }\n\n  isWorking() {\n    return this._status === LoaderStatus.kConnecting || this._status === LoaderStatus.kBuffering;\n  }\n\n  get type() {\n    return this._type;\n  }\n\n  get status() {\n    return this._status;\n  }\n\n  get needStashBuffer() {\n    return this._needStash;\n  }\n\n  get onContentLengthKnown() {\n    return this._onContentLengthKnown;\n  }\n\n  set onContentLengthKnown(callback) {\n    this._onContentLengthKnown = callback;\n  }\n\n  get onURLRedirect() {\n    return this._onURLRedirect;\n  }\n\n  set onURLRedirect(callback) {\n    this._onURLRedirect = callback;\n  }\n\n  get onDataArrival() {\n    return this._onDataArrival;\n  }\n\n  set onDataArrival(callback) {\n    this._onDataArrival = callback;\n  }\n\n  get onError() {\n    return this._onError;\n  }\n\n  set onError(callback) {\n    this._onError = callback;\n  }\n\n  get onComplete() {\n    return this._onComplete;\n  }\n\n  set onComplete(callback) {\n    this._onComplete = callback;\n  } // pure virtual\n\n\n  open(dataSource, range) {\n    throw new NotImplementedException('Unimplemented abstract function!');\n  }\n\n  abort() {\n    throw new NotImplementedException('Unimplemented abstract function!');\n  }\n\n}","map":{"version":3,"sources":["C:/Users/gethi/Desktop/React Apps/streams/client/node_modules/flv.js/src/io/loader.js"],"names":["NotImplementedException","LoaderStatus","kIdle","kConnecting","kBuffering","kError","kComplete","LoaderErrors","OK","EXCEPTION","HTTP_STATUS_CODE_INVALID","CONNECTING_TIMEOUT","EARLY_EOF","UNRECOVERABLE_EARLY_EOF","BaseLoader","constructor","typeName","_type","_status","_needStash","_onContentLengthKnown","_onURLRedirect","_onDataArrival","_onError","_onComplete","destroy","isWorking","type","status","needStashBuffer","onContentLengthKnown","callback","onURLRedirect","onDataArrival","onError","onComplete","open","dataSource","range","abort"],"mappings":"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","sourcesContent":["/*\n * Copyright (C) 2016 Bilibili. All Rights Reserved.\n *\n * @author zheng qian <xqq@xqq.im>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {NotImplementedException} from '../utils/exception.js';\n\nexport const LoaderStatus = {\n    kIdle: 0,\n    kConnecting: 1,\n    kBuffering: 2,\n    kError: 3,\n    kComplete: 4\n};\n\nexport const LoaderErrors = {\n    OK: 'OK',\n    EXCEPTION: 'Exception',\n    HTTP_STATUS_CODE_INVALID: 'HttpStatusCodeInvalid',\n    CONNECTING_TIMEOUT: 'ConnectingTimeout',\n    EARLY_EOF: 'EarlyEof',\n    UNRECOVERABLE_EARLY_EOF: 'UnrecoverableEarlyEof'\n};\n\n/* Loader has callbacks which have following prototypes:\n *     function onContentLengthKnown(contentLength: number): void\n *     function onURLRedirect(url: string): void\n *     function onDataArrival(chunk: ArrayBuffer, byteStart: number, receivedLength: number): void\n *     function onError(errorType: number, errorInfo: {code: number, msg: string}): void\n *     function onComplete(rangeFrom: number, rangeTo: number): void\n */\nexport class BaseLoader {\n\n    constructor(typeName) {\n        this._type = typeName || 'undefined';\n        this._status = LoaderStatus.kIdle;\n        this._needStash = false;\n        // callbacks\n        this._onContentLengthKnown = null;\n        this._onURLRedirect = null;\n        this._onDataArrival = null;\n        this._onError = null;\n        this._onComplete = null;\n    }\n\n    destroy() {\n        this._status = LoaderStatus.kIdle;\n        this._onContentLengthKnown = null;\n        this._onURLRedirect = null;\n        this._onDataArrival = null;\n        this._onError = null;\n        this._onComplete = null;\n    }\n\n    isWorking() {\n        return this._status === LoaderStatus.kConnecting || this._status === LoaderStatus.kBuffering;\n    }\n\n    get type() {\n        return this._type;\n    }\n\n    get status() {\n        return this._status;\n    }\n\n    get needStashBuffer() {\n        return this._needStash;\n    }\n\n    get onContentLengthKnown() {\n        return this._onContentLengthKnown;\n    }\n\n    set onContentLengthKnown(callback) {\n        this._onContentLengthKnown = callback;\n    }\n\n    get onURLRedirect() {\n        return this._onURLRedirect;\n    }\n\n    set onURLRedirect(callback) {\n        this._onURLRedirect = callback;\n    }\n\n    get onDataArrival() {\n        return this._onDataArrival;\n    }\n\n    set onDataArrival(callback) {\n        this._onDataArrival = callback;\n    }\n\n    get onError() {\n        return this._onError;\n    }\n\n    set onError(callback) {\n        this._onError = callback;\n    }\n\n    get onComplete() {\n        return this._onComplete;\n    }\n\n    set onComplete(callback) {\n        this._onComplete = callback;\n    }\n\n    // pure virtual\n    open(dataSource, range) {\n        throw new NotImplementedException('Unimplemented abstract function!');\n    }\n\n    abort() {\n        throw new NotImplementedException('Unimplemented abstract function!');\n    }\n\n\n}"]},"metadata":{},"sourceType":"module"}