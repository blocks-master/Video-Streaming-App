{"ast":null,"code":"/*\n * Copyright (C) 2016 Bilibili. All Rights Reserved.\n *\n * @author zheng qian <xqq@xqq.im>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nclass MediaInfo {\n  constructor() {\n    this.mimeType = null;\n    this.duration = null;\n    this.hasAudio = null;\n    this.hasVideo = null;\n    this.audioCodec = null;\n    this.videoCodec = null;\n    this.audioDataRate = null;\n    this.videoDataRate = null;\n    this.audioSampleRate = null;\n    this.audioChannelCount = null;\n    this.width = null;\n    this.height = null;\n    this.fps = null;\n    this.profile = null;\n    this.level = null;\n    this.refFrames = null;\n    this.chromaFormat = null;\n    this.sarNum = null;\n    this.sarDen = null;\n    this.metadata = null;\n    this.segments = null; // MediaInfo[]\n\n    this.segmentCount = null;\n    this.hasKeyframesIndex = null;\n    this.keyframesIndex = null;\n  }\n\n  isComplete() {\n    let audioInfoComplete = this.hasAudio === false || this.hasAudio === true && this.audioCodec != null && this.audioSampleRate != null && this.audioChannelCount != null;\n    let videoInfoComplete = this.hasVideo === false || this.hasVideo === true && this.videoCodec != null && this.width != null && this.height != null && this.fps != null && this.profile != null && this.level != null && this.refFrames != null && this.chromaFormat != null && this.sarNum != null && this.sarDen != null; // keyframesIndex may not be present\n\n    return this.mimeType != null && this.duration != null && this.metadata != null && this.hasKeyframesIndex != null && audioInfoComplete && videoInfoComplete;\n  }\n\n  isSeekable() {\n    return this.hasKeyframesIndex === true;\n  }\n\n  getNearestKeyframe(milliseconds) {\n    if (this.keyframesIndex == null) {\n      return null;\n    }\n\n    let table = this.keyframesIndex;\n\n    let keyframeIdx = this._search(table.times, milliseconds);\n\n    return {\n      index: keyframeIdx,\n      milliseconds: table.times[keyframeIdx],\n      fileposition: table.filepositions[keyframeIdx]\n    };\n  }\n\n  _search(list, value) {\n    let idx = 0;\n    let last = list.length - 1;\n    let mid = 0;\n    let lbound = 0;\n    let ubound = last;\n\n    if (value < list[0]) {\n      idx = 0;\n      lbound = ubound + 1; // skip search\n    }\n\n    while (lbound <= ubound) {\n      mid = lbound + Math.floor((ubound - lbound) / 2);\n\n      if (mid === last || value >= list[mid] && value < list[mid + 1]) {\n        idx = mid;\n        break;\n      } else if (list[mid] < value) {\n        lbound = mid + 1;\n      } else {\n        ubound = mid - 1;\n      }\n    }\n\n    return idx;\n  }\n\n}\n\nexport default MediaInfo;","map":{"version":3,"sources":["C:/Users/gethi/Desktop/React Apps/streams/client/node_modules/flv.js/src/core/media-info.js"],"names":["MediaInfo","constructor","mimeType","duration","hasAudio","hasVideo","audioCodec","videoCodec","audioDataRate","videoDataRate","audioSampleRate","audioChannelCount","width","height","fps","profile","level","refFrames","chromaFormat","sarNum","sarDen","metadata","segments","segmentCount","hasKeyframesIndex","keyframesIndex","isComplete","audioInfoComplete","videoInfoComplete","isSeekable","getNearestKeyframe","milliseconds","table","keyframeIdx","_search","times","index","fileposition","filepositions","list","value","idx","last","length","mid","lbound","ubound","Math","floor"],"mappings":"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","sourcesContent":["/*\n * Copyright (C) 2016 Bilibili. All Rights Reserved.\n *\n * @author zheng qian <xqq@xqq.im>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nclass MediaInfo {\n\n    constructor() {\n        this.mimeType = null;\n        this.duration = null;\n\n        this.hasAudio = null;\n        this.hasVideo = null;\n        this.audioCodec = null;\n        this.videoCodec = null;\n        this.audioDataRate = null;\n        this.videoDataRate = null;\n\n        this.audioSampleRate = null;\n        this.audioChannelCount = null;\n\n        this.width = null;\n        this.height = null;\n        this.fps = null;\n        this.profile = null;\n        this.level = null;\n        this.refFrames = null;\n        this.chromaFormat = null;\n        this.sarNum = null;\n        this.sarDen = null;\n\n        this.metadata = null;\n        this.segments = null;  // MediaInfo[]\n        this.segmentCount = null;\n        this.hasKeyframesIndex = null;\n        this.keyframesIndex = null;\n    }\n\n    isComplete() {\n        let audioInfoComplete = (this.hasAudio === false) ||\n                                (this.hasAudio === true &&\n                                 this.audioCodec != null &&\n                                 this.audioSampleRate != null &&\n                                 this.audioChannelCount != null);\n\n        let videoInfoComplete = (this.hasVideo === false) ||\n                                (this.hasVideo === true &&\n                                 this.videoCodec != null &&\n                                 this.width != null &&\n                                 this.height != null &&\n                                 this.fps != null &&\n                                 this.profile != null &&\n                                 this.level != null &&\n                                 this.refFrames != null &&\n                                 this.chromaFormat != null &&\n                                 this.sarNum != null &&\n                                 this.sarDen != null);\n\n        // keyframesIndex may not be present\n        return this.mimeType != null &&\n               this.duration != null &&\n               this.metadata != null &&\n               this.hasKeyframesIndex != null &&\n               audioInfoComplete &&\n               videoInfoComplete;\n    }\n\n    isSeekable() {\n        return this.hasKeyframesIndex === true;\n    }\n\n    getNearestKeyframe(milliseconds) {\n        if (this.keyframesIndex == null) {\n            return null;\n        }\n\n        let table = this.keyframesIndex;\n        let keyframeIdx = this._search(table.times, milliseconds);\n\n        return {\n            index: keyframeIdx,\n            milliseconds: table.times[keyframeIdx],\n            fileposition: table.filepositions[keyframeIdx]\n        };\n    }\n\n    _search(list, value) {\n        let idx = 0;\n\n        let last = list.length - 1;\n        let mid = 0;\n        let lbound = 0;\n        let ubound = last;\n\n        if (value < list[0]) {\n            idx = 0;\n            lbound = ubound + 1;  // skip search\n        }\n\n        while (lbound <= ubound) {\n            mid = lbound + Math.floor((ubound - lbound) / 2);\n            if (mid === last || (value >= list[mid] && value < list[mid + 1])) {\n                idx = mid;\n                break;\n            } else if (list[mid] < value) {\n                lbound = mid + 1;\n            } else {\n                ubound = mid - 1;\n            }\n        }\n\n        return idx;\n    }\n\n}\n\nexport default MediaInfo;"]},"metadata":{},"sourceType":"module"}