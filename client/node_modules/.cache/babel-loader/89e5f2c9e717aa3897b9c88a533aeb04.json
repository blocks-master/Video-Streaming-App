{"ast":null,"code":"/*\n * Copyright (C) 2016 Bilibili. All Rights Reserved.\n *\n * @author zheng qian <xqq@xqq.im>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport class RuntimeException {\n  constructor(message) {\n    this._message = message;\n  }\n\n  get name() {\n    return 'RuntimeException';\n  }\n\n  get message() {\n    return this._message;\n  }\n\n  toString() {\n    return this.name + ': ' + this.message;\n  }\n\n}\nexport class IllegalStateException extends RuntimeException {\n  constructor(message) {\n    super(message);\n  }\n\n  get name() {\n    return 'IllegalStateException';\n  }\n\n}\nexport class InvalidArgumentException extends RuntimeException {\n  constructor(message) {\n    super(message);\n  }\n\n  get name() {\n    return 'InvalidArgumentException';\n  }\n\n}\nexport class NotImplementedException extends RuntimeException {\n  constructor(message) {\n    super(message);\n  }\n\n  get name() {\n    return 'NotImplementedException';\n  }\n\n}","map":{"version":3,"sources":["C:/Users/gethi/Desktop/React Apps/streams/client/node_modules/flv.js/src/utils/exception.js"],"names":["RuntimeException","constructor","message","_message","name","toString","IllegalStateException","InvalidArgumentException","NotImplementedException"],"mappings":"AAAA;;;;;;;;;;;;;;;;;AAkBA,OAAO,MAAMA,gBAAN,CAAuB;AAE1BC,EAAAA,WAAW,CAACC,OAAD,EAAU;AACjB,SAAKC,QAAL,GAAgBD,OAAhB;AACH;;AAED,MAAIE,IAAJ,GAAW;AACP,WAAO,kBAAP;AACH;;AAED,MAAIF,OAAJ,GAAc;AACV,WAAO,KAAKC,QAAZ;AACH;;AAEDE,EAAAA,QAAQ,GAAG;AACP,WAAO,KAAKD,IAAL,GAAY,IAAZ,GAAmB,KAAKF,OAA/B;AACH;;AAhByB;AAoB9B,OAAO,MAAMI,qBAAN,SAAoCN,gBAApC,CAAqD;AAExDC,EAAAA,WAAW,CAACC,OAAD,EAAU;AACjB,UAAMA,OAAN;AACH;;AAED,MAAIE,IAAJ,GAAW;AACP,WAAO,uBAAP;AACH;;AARuD;AAY5D,OAAO,MAAMG,wBAAN,SAAuCP,gBAAvC,CAAwD;AAE3DC,EAAAA,WAAW,CAACC,OAAD,EAAU;AACjB,UAAMA,OAAN;AACH;;AAED,MAAIE,IAAJ,GAAW;AACP,WAAO,0BAAP;AACH;;AAR0D;AAY/D,OAAO,MAAMI,uBAAN,SAAsCR,gBAAtC,CAAuD;AAE1DC,EAAAA,WAAW,CAACC,OAAD,EAAU;AACjB,UAAMA,OAAN;AACH;;AAED,MAAIE,IAAJ,GAAW;AACP,WAAO,yBAAP;AACH;;AARyD","sourcesContent":["/*\n * Copyright (C) 2016 Bilibili. All Rights Reserved.\n *\n * @author zheng qian <xqq@xqq.im>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class RuntimeException {\n\n    constructor(message) {\n        this._message = message;\n    }\n\n    get name() {\n        return 'RuntimeException';\n    }\n\n    get message() {\n        return this._message;\n    }\n\n    toString() {\n        return this.name + ': ' + this.message;\n    }\n\n}\n\nexport class IllegalStateException extends RuntimeException {\n\n    constructor(message) {\n        super(message);\n    }\n\n    get name() {\n        return 'IllegalStateException';\n    }\n\n}\n\nexport class InvalidArgumentException extends RuntimeException {\n\n    constructor(message) {\n        super(message);\n    }\n\n    get name() {\n        return 'InvalidArgumentException';\n    }\n\n}\n\nexport class NotImplementedException extends RuntimeException {\n\n    constructor(message) {\n        super(message);\n    }\n\n    get name() {\n        return 'NotImplementedException';\n    }\n\n}\n"]},"metadata":{},"sourceType":"module"}