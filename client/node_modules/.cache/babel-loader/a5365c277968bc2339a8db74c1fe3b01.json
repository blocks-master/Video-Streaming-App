{"ast":null,"code":"/*\n * Copyright (C) 2016 Bilibili. All Rights Reserved.\n *\n * @author zheng qian <xqq@xqq.im>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport EventEmitter from 'events';\n\nclass Log {\n  static e(tag, msg) {\n    if (!tag || Log.FORCE_GLOBAL_TAG) tag = Log.GLOBAL_TAG;\n    let str = `[${tag}] > ${msg}`;\n\n    if (Log.ENABLE_CALLBACK) {\n      Log.emitter.emit('log', 'error', str);\n    }\n\n    if (!Log.ENABLE_ERROR) {\n      return;\n    }\n\n    if (console.error) {\n      console.error(str);\n    } else if (console.warn) {\n      console.warn(str);\n    } else {\n      console.log(str);\n    }\n  }\n\n  static i(tag, msg) {\n    if (!tag || Log.FORCE_GLOBAL_TAG) tag = Log.GLOBAL_TAG;\n    let str = `[${tag}] > ${msg}`;\n\n    if (Log.ENABLE_CALLBACK) {\n      Log.emitter.emit('log', 'info', str);\n    }\n\n    if (!Log.ENABLE_INFO) {\n      return;\n    }\n\n    if (console.info) {\n      console.info(str);\n    } else {\n      console.log(str);\n    }\n  }\n\n  static w(tag, msg) {\n    if (!tag || Log.FORCE_GLOBAL_TAG) tag = Log.GLOBAL_TAG;\n    let str = `[${tag}] > ${msg}`;\n\n    if (Log.ENABLE_CALLBACK) {\n      Log.emitter.emit('log', 'warn', str);\n    }\n\n    if (!Log.ENABLE_WARN) {\n      return;\n    }\n\n    if (console.warn) {\n      console.warn(str);\n    } else {\n      console.log(str);\n    }\n  }\n\n  static d(tag, msg) {\n    if (!tag || Log.FORCE_GLOBAL_TAG) tag = Log.GLOBAL_TAG;\n    let str = `[${tag}] > ${msg}`;\n\n    if (Log.ENABLE_CALLBACK) {\n      Log.emitter.emit('log', 'debug', str);\n    }\n\n    if (!Log.ENABLE_DEBUG) {\n      return;\n    }\n\n    if (console.debug) {\n      console.debug(str);\n    } else {\n      console.log(str);\n    }\n  }\n\n  static v(tag, msg) {\n    if (!tag || Log.FORCE_GLOBAL_TAG) tag = Log.GLOBAL_TAG;\n    let str = `[${tag}] > ${msg}`;\n\n    if (Log.ENABLE_CALLBACK) {\n      Log.emitter.emit('log', 'verbose', str);\n    }\n\n    if (!Log.ENABLE_VERBOSE) {\n      return;\n    }\n\n    console.log(str);\n  }\n\n}\n\nLog.GLOBAL_TAG = 'flv.js';\nLog.FORCE_GLOBAL_TAG = false;\nLog.ENABLE_ERROR = true;\nLog.ENABLE_INFO = true;\nLog.ENABLE_WARN = true;\nLog.ENABLE_DEBUG = true;\nLog.ENABLE_VERBOSE = true;\nLog.ENABLE_CALLBACK = false;\nLog.emitter = new EventEmitter();\nexport default Log;","map":{"version":3,"sources":["C:/Users/gethi/Desktop/React Apps/streams/client/node_modules/flv.js/src/utils/logger.js"],"names":["EventEmitter","Log","e","tag","msg","FORCE_GLOBAL_TAG","GLOBAL_TAG","str","ENABLE_CALLBACK","emitter","emit","ENABLE_ERROR","console","error","warn","log","i","ENABLE_INFO","info","w","ENABLE_WARN","d","ENABLE_DEBUG","debug","v","ENABLE_VERBOSE"],"mappings":"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","sourcesContent":["/*\n * Copyright (C) 2016 Bilibili. All Rights Reserved.\n *\n * @author zheng qian <xqq@xqq.im>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport EventEmitter from 'events';\n\nclass Log {\n\n    static e(tag, msg) {\n        if (!tag || Log.FORCE_GLOBAL_TAG)\n            tag = Log.GLOBAL_TAG;\n\n        let str = `[${tag}] > ${msg}`;\n\n        if (Log.ENABLE_CALLBACK) {\n            Log.emitter.emit('log', 'error', str);\n        }\n\n        if (!Log.ENABLE_ERROR) {\n            return;\n        }\n\n        if (console.error) {\n            console.error(str);\n        } else if (console.warn) {\n            console.warn(str);\n        } else {\n            console.log(str);\n        }\n    }\n\n    static i(tag, msg) {\n        if (!tag || Log.FORCE_GLOBAL_TAG)\n            tag = Log.GLOBAL_TAG;\n\n        let str = `[${tag}] > ${msg}`;\n\n        if (Log.ENABLE_CALLBACK) {\n            Log.emitter.emit('log', 'info', str);\n        }\n\n        if (!Log.ENABLE_INFO) {\n            return;\n        }\n\n        if (console.info) {\n            console.info(str);\n        } else {\n            console.log(str);\n        }\n    }\n\n    static w(tag, msg) {\n        if (!tag || Log.FORCE_GLOBAL_TAG)\n            tag = Log.GLOBAL_TAG;\n\n        let str = `[${tag}] > ${msg}`;\n\n        if (Log.ENABLE_CALLBACK) {\n            Log.emitter.emit('log', 'warn', str);\n        }\n\n        if (!Log.ENABLE_WARN) {\n            return;\n        }\n\n        if (console.warn) {\n            console.warn(str);\n        } else {\n            console.log(str);\n        }\n    }\n\n    static d(tag, msg) {\n        if (!tag || Log.FORCE_GLOBAL_TAG)\n            tag = Log.GLOBAL_TAG;\n\n        let str = `[${tag}] > ${msg}`;\n\n        if (Log.ENABLE_CALLBACK) {\n            Log.emitter.emit('log', 'debug', str);\n        }\n\n        if (!Log.ENABLE_DEBUG) {\n            return;\n        }\n\n        if (console.debug) {\n            console.debug(str);\n        } else {\n            console.log(str);\n        }\n    }\n\n    static v(tag, msg) {\n        if (!tag || Log.FORCE_GLOBAL_TAG)\n            tag = Log.GLOBAL_TAG;\n\n        let str = `[${tag}] > ${msg}`;\n\n        if (Log.ENABLE_CALLBACK) {\n            Log.emitter.emit('log', 'verbose', str);\n        }\n\n        if (!Log.ENABLE_VERBOSE) {\n            return;\n        }\n\n        console.log(str);\n    }\n\n}\n\nLog.GLOBAL_TAG = 'flv.js';\nLog.FORCE_GLOBAL_TAG = false;\nLog.ENABLE_ERROR = true;\nLog.ENABLE_INFO = true;\nLog.ENABLE_WARN = true;\nLog.ENABLE_DEBUG = true;\nLog.ENABLE_VERBOSE = true;\n\nLog.ENABLE_CALLBACK = false;\n\nLog.emitter = new EventEmitter();\n\nexport default Log;"]},"metadata":{},"sourceType":"module"}