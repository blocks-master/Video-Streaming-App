{"ast":null,"code":"import createHasError from '../hasError';\nexport default function createIsValid(structure) {\n  var getIn = structure.getIn,\n      keys = structure.keys;\n  var hasError = createHasError(structure);\n  return function (form, getFormState, ignoreSubmitErrors) {\n    if (ignoreSubmitErrors === void 0) {\n      ignoreSubmitErrors = false;\n    }\n\n    return function (state) {\n      var nonNullGetFormState = getFormState || function (state) {\n        return getIn(state, 'form');\n      };\n\n      var formState = nonNullGetFormState(state);\n      var syncError = getIn(formState, form + \".syncError\");\n\n      if (syncError) {\n        return false;\n      }\n\n      if (!ignoreSubmitErrors) {\n        var error = getIn(formState, form + \".error\");\n\n        if (error) {\n          return false;\n        }\n      }\n\n      var syncErrors = getIn(formState, form + \".syncErrors\");\n      var asyncErrors = getIn(formState, form + \".asyncErrors\");\n      var submitErrors = ignoreSubmitErrors ? undefined : getIn(formState, form + \".submitErrors\");\n\n      if (!syncErrors && !asyncErrors && !submitErrors) {\n        return true;\n      }\n\n      var registeredFields = getIn(formState, form + \".registeredFields\");\n\n      if (!registeredFields) {\n        return true;\n      }\n\n      return !keys(registeredFields).filter(function (name) {\n        return getIn(registeredFields, \"['\" + name + \"'].count\") > 0;\n      }).some(function (name) {\n        return hasError(getIn(registeredFields, \"['\" + name + \"']\"), syncErrors, asyncErrors, submitErrors);\n      });\n    };\n  };\n}","map":{"version":3,"sources":["C:/Users/gethi/Desktop/React Apps/streams/client/node_modules/redux-form/es/selectors/isValid.js"],"names":["createHasError","createIsValid","structure","getIn","keys","hasError","form","getFormState","ignoreSubmitErrors","state","nonNullGetFormState","formState","syncError","error","syncErrors","asyncErrors","submitErrors","undefined","registeredFields","filter","name","some"],"mappings":"AAAA,OAAOA,cAAP,MAA2B,aAA3B;AACA,eAAe,SAASC,aAAT,CAAuBC,SAAvB,EAAkC;AAC/C,MAAIC,KAAK,GAAGD,SAAS,CAACC,KAAtB;AAAA,MACIC,IAAI,GAAGF,SAAS,CAACE,IADrB;AAEA,MAAIC,QAAQ,GAAGL,cAAc,CAACE,SAAD,CAA7B;AACA,SAAO,UAAUI,IAAV,EAAgBC,YAAhB,EAA8BC,kBAA9B,EAAkD;AACvD,QAAIA,kBAAkB,KAAK,KAAK,CAAhC,EAAmC;AACjCA,MAAAA,kBAAkB,GAAG,KAArB;AACD;;AAED,WAAO,UAAUC,KAAV,EAAiB;AACtB,UAAIC,mBAAmB,GAAGH,YAAY,IAAI,UAAUE,KAAV,EAAiB;AACzD,eAAON,KAAK,CAACM,KAAD,EAAQ,MAAR,CAAZ;AACD,OAFD;;AAIA,UAAIE,SAAS,GAAGD,mBAAmB,CAACD,KAAD,CAAnC;AACA,UAAIG,SAAS,GAAGT,KAAK,CAACQ,SAAD,EAAYL,IAAI,GAAG,YAAnB,CAArB;;AAEA,UAAIM,SAAJ,EAAe;AACb,eAAO,KAAP;AACD;;AAED,UAAI,CAACJ,kBAAL,EAAyB;AACvB,YAAIK,KAAK,GAAGV,KAAK,CAACQ,SAAD,EAAYL,IAAI,GAAG,QAAnB,CAAjB;;AAEA,YAAIO,KAAJ,EAAW;AACT,iBAAO,KAAP;AACD;AACF;;AAED,UAAIC,UAAU,GAAGX,KAAK,CAACQ,SAAD,EAAYL,IAAI,GAAG,aAAnB,CAAtB;AACA,UAAIS,WAAW,GAAGZ,KAAK,CAACQ,SAAD,EAAYL,IAAI,GAAG,cAAnB,CAAvB;AACA,UAAIU,YAAY,GAAGR,kBAAkB,GAAGS,SAAH,GAAed,KAAK,CAACQ,SAAD,EAAYL,IAAI,GAAG,eAAnB,CAAzD;;AAEA,UAAI,CAACQ,UAAD,IAAe,CAACC,WAAhB,IAA+B,CAACC,YAApC,EAAkD;AAChD,eAAO,IAAP;AACD;;AAED,UAAIE,gBAAgB,GAAGf,KAAK,CAACQ,SAAD,EAAYL,IAAI,GAAG,mBAAnB,CAA5B;;AAEA,UAAI,CAACY,gBAAL,EAAuB;AACrB,eAAO,IAAP;AACD;;AAED,aAAO,CAACd,IAAI,CAACc,gBAAD,CAAJ,CAAuBC,MAAvB,CAA8B,UAAUC,IAAV,EAAgB;AACpD,eAAOjB,KAAK,CAACe,gBAAD,EAAmB,OAAOE,IAAP,GAAc,UAAjC,CAAL,GAAoD,CAA3D;AACD,OAFO,EAELC,IAFK,CAEA,UAAUD,IAAV,EAAgB;AACtB,eAAOf,QAAQ,CAACF,KAAK,CAACe,gBAAD,EAAmB,OAAOE,IAAP,GAAc,IAAjC,CAAN,EAA8CN,UAA9C,EAA0DC,WAA1D,EAAuEC,YAAvE,CAAf;AACD,OAJO,CAAR;AAKD,KAvCD;AAwCD,GA7CD;AA8CD","sourcesContent":["import createHasError from '../hasError';\nexport default function createIsValid(structure) {\n  var getIn = structure.getIn,\n      keys = structure.keys;\n  var hasError = createHasError(structure);\n  return function (form, getFormState, ignoreSubmitErrors) {\n    if (ignoreSubmitErrors === void 0) {\n      ignoreSubmitErrors = false;\n    }\n\n    return function (state) {\n      var nonNullGetFormState = getFormState || function (state) {\n        return getIn(state, 'form');\n      };\n\n      var formState = nonNullGetFormState(state);\n      var syncError = getIn(formState, form + \".syncError\");\n\n      if (syncError) {\n        return false;\n      }\n\n      if (!ignoreSubmitErrors) {\n        var error = getIn(formState, form + \".error\");\n\n        if (error) {\n          return false;\n        }\n      }\n\n      var syncErrors = getIn(formState, form + \".syncErrors\");\n      var asyncErrors = getIn(formState, form + \".asyncErrors\");\n      var submitErrors = ignoreSubmitErrors ? undefined : getIn(formState, form + \".submitErrors\");\n\n      if (!syncErrors && !asyncErrors && !submitErrors) {\n        return true;\n      }\n\n      var registeredFields = getIn(formState, form + \".registeredFields\");\n\n      if (!registeredFields) {\n        return true;\n      }\n\n      return !keys(registeredFields).filter(function (name) {\n        return getIn(registeredFields, \"['\" + name + \"'].count\") > 0;\n      }).some(function (name) {\n        return hasError(getIn(registeredFields, \"['\" + name + \"']\"), syncErrors, asyncErrors, submitErrors);\n      });\n    };\n  };\n}"]},"metadata":{},"sourceType":"module"}