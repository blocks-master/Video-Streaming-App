{"ast":null,"code":"/*\n * Copyright (C) 2016 Bilibili. All Rights Reserved.\n *\n * This file is derived from C++ project libWinTF8 (https://github.com/m13253/libWinTF8)\n * @author zheng qian <xqq@xqq.im>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nfunction checkContinuation(uint8array, start, checkLength) {\n  let array = uint8array;\n\n  if (start + checkLength < array.length) {\n    while (checkLength--) {\n      if ((array[++start] & 0xC0) !== 0x80) return false;\n    }\n\n    return true;\n  } else {\n    return false;\n  }\n}\n\nfunction decodeUTF8(uint8array) {\n  let out = [];\n  let input = uint8array;\n  let i = 0;\n  let length = uint8array.length;\n\n  while (i < length) {\n    if (input[i] < 0x80) {\n      out.push(String.fromCharCode(input[i]));\n      ++i;\n      continue;\n    } else if (input[i] < 0xC0) {// fallthrough\n    } else if (input[i] < 0xE0) {\n      if (checkContinuation(input, i, 1)) {\n        let ucs4 = (input[i] & 0x1F) << 6 | input[i + 1] & 0x3F;\n\n        if (ucs4 >= 0x80) {\n          out.push(String.fromCharCode(ucs4 & 0xFFFF));\n          i += 2;\n          continue;\n        }\n      }\n    } else if (input[i] < 0xF0) {\n      if (checkContinuation(input, i, 2)) {\n        let ucs4 = (input[i] & 0xF) << 12 | (input[i + 1] & 0x3F) << 6 | input[i + 2] & 0x3F;\n\n        if (ucs4 >= 0x800 && (ucs4 & 0xF800) !== 0xD800) {\n          out.push(String.fromCharCode(ucs4 & 0xFFFF));\n          i += 3;\n          continue;\n        }\n      }\n    } else if (input[i] < 0xF8) {\n      if (checkContinuation(input, i, 3)) {\n        let ucs4 = (input[i] & 0x7) << 18 | (input[i + 1] & 0x3F) << 12 | (input[i + 2] & 0x3F) << 6 | input[i + 3] & 0x3F;\n\n        if (ucs4 > 0x10000 && ucs4 < 0x110000) {\n          ucs4 -= 0x10000;\n          out.push(String.fromCharCode(ucs4 >>> 10 | 0xD800));\n          out.push(String.fromCharCode(ucs4 & 0x3FF | 0xDC00));\n          i += 4;\n          continue;\n        }\n      }\n    }\n\n    out.push(String.fromCharCode(0xFFFD));\n    ++i;\n  }\n\n  return out.join('');\n}\n\nexport default decodeUTF8;","map":{"version":3,"sources":["C:/Users/gethi/Desktop/React Apps/streams/client/node_modules/flv.js/src/utils/utf8-conv.js"],"names":["checkContinuation","uint8array","start","checkLength","array","length","decodeUTF8","out","input","i","push","String","fromCharCode","ucs4","join"],"mappings":"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","sourcesContent":["/*\n * Copyright (C) 2016 Bilibili. All Rights Reserved.\n *\n * This file is derived from C++ project libWinTF8 (https://github.com/m13253/libWinTF8)\n * @author zheng qian <xqq@xqq.im>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nfunction checkContinuation(uint8array, start, checkLength) {\n    let array = uint8array;\n    if (start + checkLength < array.length) {\n        while (checkLength--) {\n            if ((array[++start] & 0xC0) !== 0x80)\n                return false;\n        }\n        return true;\n    } else {\n        return false;\n    }\n}\n\nfunction decodeUTF8(uint8array) {\n    let out = [];\n    let input = uint8array;\n    let i = 0;\n    let length = uint8array.length;\n\n    while (i < length) {\n        if (input[i] < 0x80) {\n            out.push(String.fromCharCode(input[i]));\n            ++i;\n            continue;\n        } else if (input[i] < 0xC0) {\n            // fallthrough\n        } else if (input[i] < 0xE0) {\n            if (checkContinuation(input, i, 1)) {\n                let ucs4 = (input[i] & 0x1F) << 6 | (input[i + 1] & 0x3F);\n                if (ucs4 >= 0x80) {\n                    out.push(String.fromCharCode(ucs4 & 0xFFFF));\n                    i += 2;\n                    continue;\n                }\n            }\n        } else if (input[i] < 0xF0) {\n            if (checkContinuation(input, i, 2)) {\n                let ucs4 = (input[i] & 0xF) << 12 | (input[i + 1] & 0x3F) << 6 | input[i + 2] & 0x3F;\n                if (ucs4 >= 0x800 && (ucs4 & 0xF800) !== 0xD800) {\n                    out.push(String.fromCharCode(ucs4 & 0xFFFF));\n                    i += 3;\n                    continue;\n                }\n            }\n        } else if (input[i] < 0xF8) {\n            if (checkContinuation(input, i, 3)) {\n                let ucs4 = (input[i] & 0x7) << 18 | (input[i + 1] & 0x3F) << 12\n                         | (input[i + 2] & 0x3F) << 6 | (input[i + 3] & 0x3F);\n                if (ucs4 > 0x10000 && ucs4 < 0x110000) {\n                    ucs4 -= 0x10000;\n                    out.push(String.fromCharCode((ucs4 >>> 10) | 0xD800));\n                    out.push(String.fromCharCode((ucs4 & 0x3FF) | 0xDC00));\n                    i += 4;\n                    continue;\n                }\n            }\n        }\n        out.push(String.fromCharCode(0xFFFD));\n        ++i;\n    }\n\n    return out.join('');\n}\n\nexport default decodeUTF8;"]},"metadata":{},"sourceType":"module"}