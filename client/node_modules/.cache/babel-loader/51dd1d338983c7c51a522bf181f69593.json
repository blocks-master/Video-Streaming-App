{"ast":null,"code":"/*\n * Copyright (C) 2016 Bilibili. All Rights Reserved.\n *\n * @author zheng qian <xqq@xqq.im>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport EventEmitter from 'events';\nimport Log from './logger.js';\n\nclass LoggingControl {\n  static get forceGlobalTag() {\n    return Log.FORCE_GLOBAL_TAG;\n  }\n\n  static set forceGlobalTag(enable) {\n    Log.FORCE_GLOBAL_TAG = enable;\n\n    LoggingControl._notifyChange();\n  }\n\n  static get globalTag() {\n    return Log.GLOBAL_TAG;\n  }\n\n  static set globalTag(tag) {\n    Log.GLOBAL_TAG = tag;\n\n    LoggingControl._notifyChange();\n  }\n\n  static get enableAll() {\n    return Log.ENABLE_VERBOSE && Log.ENABLE_DEBUG && Log.ENABLE_INFO && Log.ENABLE_WARN && Log.ENABLE_ERROR;\n  }\n\n  static set enableAll(enable) {\n    Log.ENABLE_VERBOSE = enable;\n    Log.ENABLE_DEBUG = enable;\n    Log.ENABLE_INFO = enable;\n    Log.ENABLE_WARN = enable;\n    Log.ENABLE_ERROR = enable;\n\n    LoggingControl._notifyChange();\n  }\n\n  static get enableDebug() {\n    return Log.ENABLE_DEBUG;\n  }\n\n  static set enableDebug(enable) {\n    Log.ENABLE_DEBUG = enable;\n\n    LoggingControl._notifyChange();\n  }\n\n  static get enableVerbose() {\n    return Log.ENABLE_VERBOSE;\n  }\n\n  static set enableVerbose(enable) {\n    Log.ENABLE_VERBOSE = enable;\n\n    LoggingControl._notifyChange();\n  }\n\n  static get enableInfo() {\n    return Log.ENABLE_INFO;\n  }\n\n  static set enableInfo(enable) {\n    Log.ENABLE_INFO = enable;\n\n    LoggingControl._notifyChange();\n  }\n\n  static get enableWarn() {\n    return Log.ENABLE_WARN;\n  }\n\n  static set enableWarn(enable) {\n    Log.ENABLE_WARN = enable;\n\n    LoggingControl._notifyChange();\n  }\n\n  static get enableError() {\n    return Log.ENABLE_ERROR;\n  }\n\n  static set enableError(enable) {\n    Log.ENABLE_ERROR = enable;\n\n    LoggingControl._notifyChange();\n  }\n\n  static getConfig() {\n    return {\n      globalTag: Log.GLOBAL_TAG,\n      forceGlobalTag: Log.FORCE_GLOBAL_TAG,\n      enableVerbose: Log.ENABLE_VERBOSE,\n      enableDebug: Log.ENABLE_DEBUG,\n      enableInfo: Log.ENABLE_INFO,\n      enableWarn: Log.ENABLE_WARN,\n      enableError: Log.ENABLE_ERROR,\n      enableCallback: Log.ENABLE_CALLBACK\n    };\n  }\n\n  static applyConfig(config) {\n    Log.GLOBAL_TAG = config.globalTag;\n    Log.FORCE_GLOBAL_TAG = config.forceGlobalTag;\n    Log.ENABLE_VERBOSE = config.enableVerbose;\n    Log.ENABLE_DEBUG = config.enableDebug;\n    Log.ENABLE_INFO = config.enableInfo;\n    Log.ENABLE_WARN = config.enableWarn;\n    Log.ENABLE_ERROR = config.enableError;\n    Log.ENABLE_CALLBACK = config.enableCallback;\n  }\n\n  static _notifyChange() {\n    let emitter = LoggingControl.emitter;\n\n    if (emitter.listenerCount('change') > 0) {\n      let config = LoggingControl.getConfig();\n      emitter.emit('change', config);\n    }\n  }\n\n  static registerListener(listener) {\n    LoggingControl.emitter.addListener('change', listener);\n  }\n\n  static removeListener(listener) {\n    LoggingControl.emitter.removeListener('change', listener);\n  }\n\n  static addLogListener(listener) {\n    Log.emitter.addListener('log', listener);\n\n    if (Log.emitter.listenerCount('log') > 0) {\n      Log.ENABLE_CALLBACK = true;\n\n      LoggingControl._notifyChange();\n    }\n  }\n\n  static removeLogListener(listener) {\n    Log.emitter.removeListener('log', listener);\n\n    if (Log.emitter.listenerCount('log') === 0) {\n      Log.ENABLE_CALLBACK = false;\n\n      LoggingControl._notifyChange();\n    }\n  }\n\n}\n\nLoggingControl.emitter = new EventEmitter();\nexport default LoggingControl;","map":{"version":3,"sources":["C:/Users/gethi/Desktop/React Apps/streams/client/node_modules/flv.js/src/utils/logging-control.js"],"names":["EventEmitter","Log","LoggingControl","forceGlobalTag","FORCE_GLOBAL_TAG","enable","_notifyChange","globalTag","GLOBAL_TAG","tag","enableAll","ENABLE_VERBOSE","ENABLE_DEBUG","ENABLE_INFO","ENABLE_WARN","ENABLE_ERROR","enableDebug","enableVerbose","enableInfo","enableWarn","enableError","getConfig","enableCallback","ENABLE_CALLBACK","applyConfig","config","emitter","listenerCount","emit","registerListener","listener","addListener","removeListener","addLogListener","removeLogListener"],"mappings":"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","sourcesContent":["/*\n * Copyright (C) 2016 Bilibili. All Rights Reserved.\n *\n * @author zheng qian <xqq@xqq.im>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport EventEmitter from 'events';\nimport Log from './logger.js';\n\nclass LoggingControl {\n\n    static get forceGlobalTag() {\n        return Log.FORCE_GLOBAL_TAG;\n    }\n\n    static set forceGlobalTag(enable) {\n        Log.FORCE_GLOBAL_TAG = enable;\n        LoggingControl._notifyChange();\n    }\n\n    static get globalTag() {\n        return Log.GLOBAL_TAG;\n    }\n\n    static set globalTag(tag) {\n        Log.GLOBAL_TAG = tag;\n        LoggingControl._notifyChange();\n    }\n\n    static get enableAll() {\n        return Log.ENABLE_VERBOSE\n            && Log.ENABLE_DEBUG\n            && Log.ENABLE_INFO\n            && Log.ENABLE_WARN\n            && Log.ENABLE_ERROR;\n    }\n\n    static set enableAll(enable) {\n        Log.ENABLE_VERBOSE = enable;\n        Log.ENABLE_DEBUG = enable;\n        Log.ENABLE_INFO = enable;\n        Log.ENABLE_WARN = enable;\n        Log.ENABLE_ERROR = enable;\n        LoggingControl._notifyChange();\n    }\n\n    static get enableDebug() {\n        return Log.ENABLE_DEBUG;\n    }\n\n    static set enableDebug(enable) {\n        Log.ENABLE_DEBUG = enable;\n        LoggingControl._notifyChange();\n    }\n\n    static get enableVerbose() {\n        return Log.ENABLE_VERBOSE;\n    }\n\n    static set enableVerbose(enable) {\n        Log.ENABLE_VERBOSE = enable;\n        LoggingControl._notifyChange();\n    }\n\n    static get enableInfo() {\n        return Log.ENABLE_INFO;\n    }\n\n    static set enableInfo(enable) {\n        Log.ENABLE_INFO = enable;\n        LoggingControl._notifyChange();\n    }\n\n    static get enableWarn() {\n        return Log.ENABLE_WARN;\n    }\n\n    static set enableWarn(enable) {\n        Log.ENABLE_WARN = enable;\n        LoggingControl._notifyChange();\n    }\n\n    static get enableError() {\n        return Log.ENABLE_ERROR;\n    }\n\n    static set enableError(enable) {\n        Log.ENABLE_ERROR = enable;\n        LoggingControl._notifyChange();\n    }\n\n    static getConfig() {\n        return {\n            globalTag: Log.GLOBAL_TAG,\n            forceGlobalTag: Log.FORCE_GLOBAL_TAG,\n            enableVerbose: Log.ENABLE_VERBOSE,\n            enableDebug: Log.ENABLE_DEBUG,\n            enableInfo: Log.ENABLE_INFO,\n            enableWarn: Log.ENABLE_WARN,\n            enableError: Log.ENABLE_ERROR,\n            enableCallback: Log.ENABLE_CALLBACK\n        };\n    }\n\n    static applyConfig(config) {\n        Log.GLOBAL_TAG = config.globalTag;\n        Log.FORCE_GLOBAL_TAG = config.forceGlobalTag;\n        Log.ENABLE_VERBOSE = config.enableVerbose;\n        Log.ENABLE_DEBUG = config.enableDebug;\n        Log.ENABLE_INFO = config.enableInfo;\n        Log.ENABLE_WARN = config.enableWarn;\n        Log.ENABLE_ERROR = config.enableError;\n        Log.ENABLE_CALLBACK = config.enableCallback;\n    }\n\n    static _notifyChange() {\n        let emitter = LoggingControl.emitter;\n\n        if (emitter.listenerCount('change') > 0) {\n            let config = LoggingControl.getConfig();\n            emitter.emit('change', config);\n        }\n    }\n\n    static registerListener(listener) {\n        LoggingControl.emitter.addListener('change', listener);\n    }\n\n    static removeListener(listener) {\n        LoggingControl.emitter.removeListener('change', listener);\n    }\n\n    static addLogListener(listener) {\n        Log.emitter.addListener('log', listener);\n        if (Log.emitter.listenerCount('log') > 0) {\n            Log.ENABLE_CALLBACK = true;\n            LoggingControl._notifyChange();\n        }\n    }\n\n    static removeLogListener(listener) {\n        Log.emitter.removeListener('log', listener);\n        if (Log.emitter.listenerCount('log') === 0) {\n            Log.ENABLE_CALLBACK = false;\n            LoggingControl._notifyChange();\n        }\n    }\n\n}\n\nLoggingControl.emitter = new EventEmitter();\n\nexport default LoggingControl;"]},"metadata":{},"sourceType":"module"}