{"ast":null,"code":"import streams from \"../apis/streams\";\nimport history from \"../history\";\nimport { SIGN_IN, SIGN_OUT, CREATE_STREAM, EDIT_STREAM, DELETE_STREAM, FETCH_STREAM, FETCH_STREAMS } from \"./types\";\nexport const signIn = userId => {\n  return {\n    type: SIGN_IN,\n    payload: userId\n  };\n};\nexport const signOut = () => {\n  return {\n    type: SIGN_OUT\n  };\n};\nexport const createStream = formValues => async (dispatch, getState) => {\n  const {\n    userId\n  } = getState().auth;\n  const response = await streams.post(\"/streams\", { ...formValues,\n    userId\n  });\n  dispatch({\n    type: CREATE_STREAM,\n    payload: response.data\n  });\n  history.push(\"/\");\n};\nexport const fetchStreams = () => async dispatch => {\n  const response = await streams.get(\"/streams\");\n  dispatch({\n    type: FETCH_STREAMS,\n    payload: response.data\n  });\n};\nexport const fetchStream = id => async dispatch => {\n  const response = await streams.get(`/streams/${id}`);\n  dispatch({\n    type: FETCH_STREAM,\n    payload: response.data\n  });\n};\nexport const editStream = (id, formValues) => async dispatch => {\n  const response = await streams.put(`/streams/${id}`, formValues);\n  dispatch({\n    type: EDIT_STREAM,\n    payload: response.data\n  });\n};\nexport const deleteStream = id => async dispatch => {\n  await streams.delete(`/streams/${id}`);\n  dispatch({\n    type: DELETE_STREAM,\n    payload: id\n  });\n};","map":{"version":3,"sources":["C:/Users/gethi/Desktop/React Apps/streams/client/src/actions/index.js"],"names":["streams","history","SIGN_IN","SIGN_OUT","CREATE_STREAM","EDIT_STREAM","DELETE_STREAM","FETCH_STREAM","FETCH_STREAMS","signIn","userId","type","payload","signOut","createStream","formValues","dispatch","getState","auth","response","post","data","push","fetchStreams","get","fetchStream","id","editStream","put","deleteStream","delete"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,iBAApB;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,SAASC,OAAT,EAAkBC,QAAlB,EAA4BC,aAA5B,EAA2CC,WAA3C,EAAwDC,aAAxD,EAAuEC,YAAvE,EAAqFC,aAArF,QAA0G,SAA1G;AACA,OAAO,MAAMC,MAAM,GAAIC,MAAD,IAAY;AACjC,SAAO;AACNC,IAAAA,IAAI,EAAET,OADA;AAENU,IAAAA,OAAO,EAAEF;AAFH,GAAP;AAIA,CALM;AAOP,OAAO,MAAMG,OAAO,GAAG,MAAM;AAC5B,SAAO;AACNF,IAAAA,IAAI,EAAER;AADA,GAAP;AAGA,CAJM;AAMP,OAAO,MAAMW,YAAY,GAAIC,UAAD,IAAgB,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AACzE,QAAM;AAAEP,IAAAA;AAAF,MAAaO,QAAQ,GAAGC,IAA9B;AACA,QAAMC,QAAQ,GAAG,MAAMnB,OAAO,CAACoB,IAAR,CAAa,UAAb,EAAyB,EAAE,GAAGL,UAAL;AAAiBL,IAAAA;AAAjB,GAAzB,CAAvB;AACAM,EAAAA,QAAQ,CAAC;AAAEL,IAAAA,IAAI,EAAEP,aAAR;AAAuBQ,IAAAA,OAAO,EAAEO,QAAQ,CAACE;AAAzC,GAAD,CAAR;AACApB,EAAAA,OAAO,CAACqB,IAAR,CAAa,GAAb;AACA,CALM;AAOP,OAAO,MAAMC,YAAY,GAAG,MAAM,MAAOP,QAAP,IAAoB;AACrD,QAAMG,QAAQ,GAAG,MAAMnB,OAAO,CAACwB,GAAR,CAAY,UAAZ,CAAvB;AACAR,EAAAA,QAAQ,CAAC;AAAEL,IAAAA,IAAI,EAAEH,aAAR;AAAuBI,IAAAA,OAAO,EAAEO,QAAQ,CAACE;AAAzC,GAAD,CAAR;AACA,CAHM;AAKP,OAAO,MAAMI,WAAW,GAAIC,EAAD,IAAQ,MAAOV,QAAP,IAAoB;AACtD,QAAMG,QAAQ,GAAG,MAAMnB,OAAO,CAACwB,GAAR,CAAa,YAAWE,EAAG,EAA3B,CAAvB;AACAV,EAAAA,QAAQ,CAAC;AAAEL,IAAAA,IAAI,EAAEJ,YAAR;AAAsBK,IAAAA,OAAO,EAAEO,QAAQ,CAACE;AAAxC,GAAD,CAAR;AACA,CAHM;AAKP,OAAO,MAAMM,UAAU,GAAG,CAACD,EAAD,EAAKX,UAAL,KAAoB,MAAOC,QAAP,IAAoB;AACjE,QAAMG,QAAQ,GAAG,MAAMnB,OAAO,CAAC4B,GAAR,CAAa,YAAWF,EAAG,EAA3B,EAA8BX,UAA9B,CAAvB;AACAC,EAAAA,QAAQ,CAAC;AAAEL,IAAAA,IAAI,EAAEN,WAAR;AAAqBO,IAAAA,OAAO,EAAEO,QAAQ,CAACE;AAAvC,GAAD,CAAR;AACA,CAHM;AAKP,OAAO,MAAMQ,YAAY,GAAIH,EAAD,IAAQ,MAAOV,QAAP,IAAoB;AACvD,QAAMhB,OAAO,CAAC8B,MAAR,CAAgB,YAAWJ,EAAG,EAA9B,CAAN;AACAV,EAAAA,QAAQ,CAAC;AAAEL,IAAAA,IAAI,EAAEL,aAAR;AAAuBM,IAAAA,OAAO,EAAEc;AAAhC,GAAD,CAAR;AACA,CAHM","sourcesContent":["import streams from \"../apis/streams\";\r\nimport history from \"../history\";\r\nimport { SIGN_IN, SIGN_OUT, CREATE_STREAM, EDIT_STREAM, DELETE_STREAM, FETCH_STREAM, FETCH_STREAMS } from \"./types\";\r\nexport const signIn = (userId) => {\r\n\treturn {\r\n\t\ttype: SIGN_IN,\r\n\t\tpayload: userId\r\n\t};\r\n};\r\n\r\nexport const signOut = () => {\r\n\treturn {\r\n\t\ttype: SIGN_OUT\r\n\t};\r\n};\r\n\r\nexport const createStream = (formValues) => async (dispatch, getState) => {\r\n\tconst { userId } = getState().auth;\r\n\tconst response = await streams.post(\"/streams\", { ...formValues, userId });\r\n\tdispatch({ type: CREATE_STREAM, payload: response.data });\r\n\thistory.push(\"/\");\r\n};\r\n\r\nexport const fetchStreams = () => async (dispatch) => {\r\n\tconst response = await streams.get(\"/streams\");\r\n\tdispatch({ type: FETCH_STREAMS, payload: response.data });\r\n};\r\n\r\nexport const fetchStream = (id) => async (dispatch) => {\r\n\tconst response = await streams.get(`/streams/${id}`);\r\n\tdispatch({ type: FETCH_STREAM, payload: response.data });\r\n};\r\n\r\nexport const editStream = (id, formValues) => async (dispatch) => {\r\n\tconst response = await streams.put(`/streams/${id}`, formValues);\r\n\tdispatch({ type: EDIT_STREAM, payload: response.data });\r\n};\r\n\r\nexport const deleteStream = (id) => async (dispatch) => {\r\n\tawait streams.delete(`/streams/${id}`);\r\n\tdispatch({ type: DELETE_STREAM, payload: id });\r\n};\r\n"]},"metadata":{},"sourceType":"module"}